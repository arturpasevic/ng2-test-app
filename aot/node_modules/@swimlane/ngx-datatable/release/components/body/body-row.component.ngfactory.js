/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@swimlane/ngx-datatable/release/components/body/body-row.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/security';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/constants';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/core/src/linker/element_ref';
import * as import11 from '@swimlane/ngx-datatable/release/components/body/body-cell.component';
import * as import12 from './body-cell.component.ngfactory';
import * as import13 from '@angular/core/src/linker/view_container';
import * as import14 from '../../../../../@angular/common/src/directives/ng_style.ngfactory';
import * as import15 from '../../../../../@angular/common/src/directives/ng_for.ngfactory';
import * as import16 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import17 from '@angular/core/src/linker/template_ref';
import * as import18 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import19 from '@angular/common/src/directives/ng_for';
import * as import20 from '@angular/common/src/directives/ng_style';
export var Wrapper_DataTableBodyRowComponent = (function () {
    function Wrapper_DataTableBodyRowComponent(p0) {
        this._changed = false;
        this.context = new import0.DataTableBodyRowComponent(p0);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
        this._expr_5 = import1.UNINITIALIZED;
        this._expr_6 = import1.UNINITIALIZED;
        this._expr_7 = import1.UNINITIALIZED;
        this._expr_8 = import1.UNINITIALIZED;
        this._expr_9 = import1.UNINITIALIZED;
    }
    Wrapper_DataTableBodyRowComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_DataTableBodyRowComponent.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_DataTableBodyRowComponent.prototype.check_columns = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.columns = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_DataTableBodyRowComponent.prototype.check_innerWidth = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.innerWidth = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_DataTableBodyRowComponent.prototype.check_row = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.row = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_DataTableBodyRowComponent.prototype.check_offsetX = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.offsetX = currValue;
            this._expr_3 = currValue;
        }
    };
    Wrapper_DataTableBodyRowComponent.prototype.check_rowHeight = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_4, currValue))) {
            this._changed = true;
            this.context.rowHeight = currValue;
            this._expr_4 = currValue;
        }
    };
    Wrapper_DataTableBodyRowComponent.prototype.check_isSelected = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_5, currValue))) {
            this._changed = true;
            this.context.isSelected = currValue;
            this._expr_5 = currValue;
        }
    };
    Wrapper_DataTableBodyRowComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_DataTableBodyRowComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_6 = this.context.rowHeight;
        if (import3.checkBinding(throwOnChange, this._expr_6, currVal_6)) {
            view.renderer.setElementStyle(el, 'height', ((view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_6) == null) ? null : (view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_6).toString() + 'px')));
            this._expr_6 = currVal_6;
        }
        var currVal_7 = this.context.isSelected;
        if (import3.checkBinding(throwOnChange, this._expr_7, currVal_7)) {
            view.renderer.setElementClass(el, 'active', currVal_7);
            this._expr_7 = currVal_7;
        }
        var currVal_8 = this.context.isEvenRow;
        if (import3.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            view.renderer.setElementClass(el, 'datatable-row-even', currVal_8);
            this._expr_8 = currVal_8;
        }
        var currVal_9 = this.context.isOddRow;
        if (import3.checkBinding(throwOnChange, this._expr_9, currVal_9)) {
            view.renderer.setElementClass(el, 'datatable-row-odd', currVal_9);
            this._expr_9 = currVal_9;
        }
    };
    Wrapper_DataTableBodyRowComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        if ((eventName == 'keydown')) {
            var pd_sub_0 = (this.context.onKeyDown($event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    Wrapper_DataTableBodyRowComponent.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.activate.subscribe(_eventHandler.bind(view, 'activate')));
        }
    };
    return Wrapper_DataTableBodyRowComponent;
}());
var renderType_DataTableBodyRowComponent_Host = import3.createRenderComponentType('', 0, import6.ViewEncapsulation.None, [], {});
var View_DataTableBodyRowComponent_Host0 = (function (_super) {
    __extends(View_DataTableBodyRowComponent_Host0, _super);
    function View_DataTableBodyRowComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_DataTableBodyRowComponent_Host0, renderType_DataTableBodyRowComponent_Host, import7.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways);
    }
    View_DataTableBodyRowComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'datatable-body-row', new import3.InlineArray2(2, 'class', 'datatable-body-row'), rootSelector, null);
        this.compView_0 = new View_DataTableBodyRowComponent0(this.viewUtils, this, 0, this._el_0);
        this._DataTableBodyRowComponent_0_3 = new Wrapper_DataTableBodyRowComponent(new import10.ElementRef(this._el_0));
        this.compView_0.create(this._DataTableBodyRowComponent_0_3.context);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'keydown', null), this.eventHandler(this.handleEvent_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), [disposable_0]);
        return new import9.ComponentRef_(0, this, this._el_0, this._DataTableBodyRowComponent_0_3.context);
    };
    View_DataTableBodyRowComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.DataTableBodyRowComponent) && (0 === requestNodeIndex))) {
            return this._DataTableBodyRowComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_DataTableBodyRowComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._DataTableBodyRowComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._DataTableBodyRowComponent_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_DataTableBodyRowComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._DataTableBodyRowComponent_0_3.ngOnDestroy();
    };
    View_DataTableBodyRowComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_DataTableBodyRowComponent_Host0.prototype.handleEvent_0 = function (eventName, $event) {
        this.compView_0.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DataTableBodyRowComponent_0_3.handleEvent(eventName, $event) && result);
        return result;
    };
    return View_DataTableBodyRowComponent_Host0;
}(import2.AppView));
export var DataTableBodyRowComponentNgFactory = new import9.ComponentFactory('datatable-body-row', View_DataTableBodyRowComponent_Host0, import0.DataTableBodyRowComponent);
var styles_DataTableBodyRowComponent = [];
var View_DataTableBodyRowComponent2 = (function (_super) {
    __extends(View_DataTableBodyRowComponent2, _super);
    function View_DataTableBodyRowComponent2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_DataTableBodyRowComponent2, renderType_DataTableBodyRowComponent, import7.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_DataTableBodyRowComponent2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'datatable-body-cell', new import3.InlineArray4(4, 'class', 'datatable-body-cell', 'tabindex', '-1'), null);
        this.compView_0 = new import12.View_DataTableBodyCellComponent0(this.viewUtils, this, 0, this._el_0);
        this._DataTableBodyCellComponent_0_3 = new import12.Wrapper_DataTableBodyCellComponent(new import10.ElementRef(this._el_0));
        this._text_1 = this.renderer.createText(null, '\n      ', null);
        this.compView_0.create(this._DataTableBodyCellComponent_0_3.context);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray16(12, 'activate', null, 'focus', null, 'blur', null, 'click', null, 'dblclick', null, 'keydown', null), this.eventHandler(this.handleEvent_0));
        this._DataTableBodyCellComponent_0_3.subscribe(this, this.eventHandler(this.handleEvent_0), true);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), [disposable_0]);
        return null;
    };
    View_DataTableBodyRowComponent2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import11.DataTableBodyCellComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._DataTableBodyCellComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_DataTableBodyRowComponent2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.parentView.parentView.context.row;
        this._DataTableBodyCellComponent_0_3.check_row(currVal_0_0_0, throwOnChange, false);
        var currVal_0_0_1 = this.context.$implicit;
        this._DataTableBodyCellComponent_0_3.check_column(currVal_0_0_1, throwOnChange, false);
        var currVal_0_0_2 = this.parentView.parentView.context.rowHeight;
        this._DataTableBodyCellComponent_0_3.check_rowHeight(currVal_0_0_2, throwOnChange, false);
        var currVal_0_0_3 = this.parentView.parentView.context.isSelected;
        this._DataTableBodyCellComponent_0_3.check_isSelected(currVal_0_0_3, throwOnChange, false);
        this._DataTableBodyCellComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._DataTableBodyCellComponent_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_DataTableBodyRowComponent2.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._DataTableBodyCellComponent_0_3.ngOnDestroy();
    };
    View_DataTableBodyRowComponent2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_DataTableBodyRowComponent2.prototype.handleEvent_0 = function (eventName, $event) {
        this.compView_0.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DataTableBodyCellComponent_0_3.handleEvent(eventName, $event) && result);
        if ((eventName == 'activate')) {
            var pd_sub_0 = (this.parentView.parentView.context.onActivate($event, this.context.index) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_DataTableBodyRowComponent2;
}(import2.AppView));
var View_DataTableBodyRowComponent1 = (function (_super) {
    __extends(View_DataTableBodyRowComponent1, _super);
    function View_DataTableBodyRowComponent1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_DataTableBodyRowComponent1, renderType_DataTableBodyRowComponent, import7.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_8 = import1.UNINITIALIZED;
    }
    View_DataTableBodyRowComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._NgStyle_0_3 = new import14.Wrapper_NgStyle(this.parentView.injectorGet(import16.KeyValueDiffers, this.parentIndex), new import10.ElementRef(this._el_0), this.renderer);
        this._text_1 = this.renderer.createText(this._el_0, '\n      ', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_2 = new import13.ViewContainer(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import17.TemplateRef_(this, 2, this._anchor_2);
        this._NgFor_2_6 = new import15.Wrapper_NgFor(this._vc_2.vcRef, this._TemplateRef_2_5, this.parentView.injectorGet(import18.IterableDiffers, this.parentIndex), this.parentView.ref);
        this._text_3 = this.renderer.createText(this._el_0, '\n    ', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._anchor_2,
            this._text_3
        ]), null);
        return null;
    };
    View_DataTableBodyRowComponent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import17.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import19.NgFor) && (2 === requestNodeIndex))) {
            return this._NgFor_2_6.context;
        }
        if (((token === import20.NgStyle) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) {
            return this._NgStyle_0_3.context;
        }
        return notFoundResult;
    };
    View_DataTableBodyRowComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.parentView.context.stylesByGroup(this.context.$implicit.type);
        this._NgStyle_0_3.check_ngStyle(currVal_0_0_0, throwOnChange, false);
        this._NgStyle_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_2_0_0 = this.context.$implicit.columns;
        this._NgFor_2_6.check_ngForOf(currVal_2_0_0, throwOnChange, false);
        var currVal_2_0_1 = this.parentView.context.columnTrackingFn;
        this._NgFor_2_6.check_ngForTrackBy(currVal_2_0_1, throwOnChange, false);
        this._NgFor_2_6.ngDoCheck(this, this._anchor_2, throwOnChange);
        this._vc_2.detectChangesInNestedViews(throwOnChange);
        var currVal_8 = import3.inlineInterpolate(1, 'datatable-row-', this.context.$implicit.type, ' datatable-row-group');
        if (import3.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this.renderer.setElementProperty(this._el_0, 'className', currVal_8);
            this._expr_8 = currVal_8;
        }
    };
    View_DataTableBodyRowComponent1.prototype.destroyInternal = function () {
        this._vc_2.destroyNestedViews();
    };
    View_DataTableBodyRowComponent1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_DataTableBodyRowComponent1.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 2)) {
            return new View_DataTableBodyRowComponent2(this.viewUtils, this, 2, this._anchor_2, this._vc_2);
        }
        return null;
    };
    return View_DataTableBodyRowComponent1;
}(import2.AppView));
var renderType_DataTableBodyRowComponent = import3.createRenderComponentType('', 0, import6.ViewEncapsulation.None, styles_DataTableBodyRowComponent, {});
export var View_DataTableBodyRowComponent0 = (function (_super) {
    __extends(View_DataTableBodyRowComponent0, _super);
    function View_DataTableBodyRowComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_DataTableBodyRowComponent0, renderType_DataTableBodyRowComponent, import7.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways);
    }
    View_DataTableBodyRowComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._vc_1 = new import13.ViewContainer(1, null, this, this._anchor_1);
        this._TemplateRef_1_5 = new import17.TemplateRef_(this, 1, this._anchor_1);
        this._NgFor_1_6 = new import15.Wrapper_NgFor(this._vc_1.vcRef, this._TemplateRef_1_5, this.parentView.injectorGet(import18.IterableDiffers, this.parentIndex), this.ref);
        this._text_2 = this.renderer.createText(parentRenderNode, '\n  ', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._anchor_1,
            this._text_2
        ]), null);
        return null;
    };
    View_DataTableBodyRowComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import17.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_5;
        }
        if (((token === import19.NgFor) && (1 === requestNodeIndex))) {
            return this._NgFor_1_6.context;
        }
        return notFoundResult;
    };
    View_DataTableBodyRowComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1_0_0 = this.context.columnsByPin;
        this._NgFor_1_6.check_ngForOf(currVal_1_0_0, throwOnChange, false);
        var currVal_1_0_1 = this.context.trackByGroups;
        this._NgFor_1_6.check_ngForTrackBy(currVal_1_0_1, throwOnChange, false);
        this._NgFor_1_6.ngDoCheck(this, this._anchor_1, throwOnChange);
        this._vc_1.detectChangesInNestedViews(throwOnChange);
    };
    View_DataTableBodyRowComponent0.prototype.destroyInternal = function () {
        this._vc_1.destroyNestedViews();
    };
    View_DataTableBodyRowComponent0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 1)) {
            return new View_DataTableBodyRowComponent1(this.viewUtils, this, 1, this._anchor_1, this._vc_1);
        }
        return null;
    };
    return View_DataTableBodyRowComponent0;
}(import2.AppView));
//# sourceMappingURL=body-row.component.ngfactory.js.map