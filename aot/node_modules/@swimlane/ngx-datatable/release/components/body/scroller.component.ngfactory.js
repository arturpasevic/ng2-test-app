/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@swimlane/ngx-datatable/release/components/body/scroller.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/security';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/constants';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/core/src/linker/element_ref';
export var Wrapper_ScrollerComponent = (function () {
    function Wrapper_ScrollerComponent(p0, p1) {
        this._changed = false;
        this.context = new import0.ScrollerComponent(p0, p1);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
        this._expr_5 = import1.UNINITIALIZED;
    }
    Wrapper_ScrollerComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_ScrollerComponent.prototype.ngOnDestroy = function () {
        this.context.ngOnDestroy();
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_ScrollerComponent.prototype.check_scrollbarV = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.scrollbarV = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_ScrollerComponent.prototype.check_scrollbarH = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.scrollbarH = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_ScrollerComponent.prototype.check_scrollHeight = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.scrollHeight = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_ScrollerComponent.prototype.check_scrollWidth = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.scrollWidth = currValue;
            this._expr_3 = currValue;
        }
    };
    Wrapper_ScrollerComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_ScrollerComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_4 = this.context.scrollHeight;
        if (import3.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            view.renderer.setElementStyle(el, 'height', ((view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_4) == null) ? null : (view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_4).toString() + 'px')));
            this._expr_4 = currVal_4;
        }
        var currVal_5 = this.context.scrollWidth;
        if (import3.checkBinding(throwOnChange, this._expr_5, currVal_5)) {
            view.renderer.setElementStyle(el, 'width', ((view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_5) == null) ? null : (view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_5).toString() + 'px')));
            this._expr_5 = currVal_5;
        }
    };
    Wrapper_ScrollerComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_ScrollerComponent.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.scroll.subscribe(_eventHandler.bind(view, 'scroll')));
        }
    };
    return Wrapper_ScrollerComponent;
}());
var renderType_ScrollerComponent_Host = import3.createRenderComponentType('', 0, import6.ViewEncapsulation.None, [], {});
var View_ScrollerComponent_Host0 = (function (_super) {
    __extends(View_ScrollerComponent_Host0, _super);
    function View_ScrollerComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ScrollerComponent_Host0, renderType_ScrollerComponent_Host, import7.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways);
    }
    View_ScrollerComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'datatable-scroller', new import3.InlineArray2(2, 'class', 'datatable-scroll'), rootSelector, null);
        this.compView_0 = new View_ScrollerComponent0(this.viewUtils, this, 0, this._el_0);
        this._ScrollerComponent_0_3 = new Wrapper_ScrollerComponent(new import10.ElementRef(this._el_0), this.renderer);
        this.compView_0.create(this._ScrollerComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import9.ComponentRef_(0, this, this._el_0, this._ScrollerComponent_0_3.context);
    };
    View_ScrollerComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.ScrollerComponent) && (0 === requestNodeIndex))) {
            return this._ScrollerComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_ScrollerComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._ScrollerComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._ScrollerComponent_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_ScrollerComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._ScrollerComponent_0_3.ngOnDestroy();
    };
    View_ScrollerComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_ScrollerComponent_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
    };
    return View_ScrollerComponent_Host0;
}(import2.AppView));
export var ScrollerComponentNgFactory = new import9.ComponentFactory('datatable-scroller', View_ScrollerComponent_Host0, import0.ScrollerComponent);
var styles_ScrollerComponent = [];
var renderType_ScrollerComponent = import3.createRenderComponentType('', 1, import6.ViewEncapsulation.None, styles_ScrollerComponent, {});
export var View_ScrollerComponent0 = (function (_super) {
    __extends(View_ScrollerComponent0, _super);
    function View_ScrollerComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ScrollerComponent0, renderType_ScrollerComponent, import7.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways);
    }
    View_ScrollerComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this.projectNodes(parentRenderNode, 0);
        this._text_1 = this.renderer.createText(parentRenderNode, '\n  ', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._text_1
        ]), null);
        return null;
    };
    return View_ScrollerComponent0;
}(import2.AppView));
//# sourceMappingURL=scroller.component.ngfactory.js.map