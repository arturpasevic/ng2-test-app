/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@swimlane/ngx-datatable/release/components/body/body.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/security';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/constants';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@swimlane/ngx-datatable/release/components/body/progress-bar.component';
import * as import11 from './progress-bar.component.ngfactory';
import * as import12 from '@angular/core/src/linker/view_container';
import * as import13 from '@swimlane/ngx-datatable/release/components/body/body-row-wrapper.component';
import * as import14 from '../../../../../@angular/common/src/directives/ng_style.ngfactory';
import * as import15 from './body-row-wrapper.component.ngfactory';
import * as import16 from '@swimlane/ngx-datatable/release/components/body/body-row.component';
import * as import17 from './body-row.component.ngfactory';
import * as import18 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import19 from '@angular/core/src/linker/element_ref';
import * as import20 from '@angular/common/src/directives/ng_style';
import * as import21 from '@swimlane/ngx-datatable/release/components/body/scroller.component';
import * as import22 from './scroller.component.ngfactory';
import * as import23 from '../../../../../@angular/common/src/directives/ng_for.ngfactory';
import * as import24 from '@angular/core/src/linker/template_ref';
import * as import25 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import26 from '@angular/common/src/directives/ng_for';
import * as import27 from '@angular/core/src/linker/query_list';
import * as import28 from '@swimlane/ngx-datatable/release/components/body/selection.component';
import * as import29 from './selection.component.ngfactory';
import * as import30 from '../../../../../@angular/common/src/directives/ng_if.ngfactory';
import * as import31 from '@angular/common/src/directives/ng_if';
export var Wrapper_DataTableBodyComponent = (function () {
    function Wrapper_DataTableBodyComponent() {
        this._changed = false;
        this.context = new import0.DataTableBodyComponent();
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
        this._expr_5 = import1.UNINITIALIZED;
        this._expr_6 = import1.UNINITIALIZED;
        this._expr_7 = import1.UNINITIALIZED;
        this._expr_8 = import1.UNINITIALIZED;
        this._expr_9 = import1.UNINITIALIZED;
        this._expr_10 = import1.UNINITIALIZED;
        this._expr_11 = import1.UNINITIALIZED;
        this._expr_12 = import1.UNINITIALIZED;
        this._expr_13 = import1.UNINITIALIZED;
        this._expr_14 = import1.UNINITIALIZED;
        this._expr_15 = import1.UNINITIALIZED;
        this._expr_16 = import1.UNINITIALIZED;
        this._expr_17 = import1.UNINITIALIZED;
        this._expr_18 = import1.UNINITIALIZED;
        this._expr_19 = import1.UNINITIALIZED;
        this._expr_20 = import1.UNINITIALIZED;
        this._expr_21 = import1.UNINITIALIZED;
    }
    Wrapper_DataTableBodyComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_DataTableBodyComponent.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
        (this.subscription1 && this.subscription1.unsubscribe());
        (this.subscription2 && this.subscription2.unsubscribe());
        (this.subscription3 && this.subscription3.unsubscribe());
        (this.subscription4 && this.subscription4.unsubscribe());
        (this.subscription5 && this.subscription5.unsubscribe());
    };
    Wrapper_DataTableBodyComponent.prototype.check_scrollbarV = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.scrollbarV = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_scrollbarH = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.scrollbarH = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_loadingIndicator = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.loadingIndicator = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_rowHeight = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.rowHeight = currValue;
            this._expr_3 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_offsetX = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_4, currValue))) {
            this._changed = true;
            this.context.offsetX = currValue;
            this._expr_4 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_detailRowHeight = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_5, currValue))) {
            this._changed = true;
            this.context.detailRowHeight = currValue;
            this._expr_5 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_emptyMessage = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_6, currValue))) {
            this._changed = true;
            this.context.emptyMessage = currValue;
            this._expr_6 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_selectionType = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_7, currValue))) {
            this._changed = true;
            this.context.selectionType = currValue;
            this._expr_7 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_selected = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_8, currValue))) {
            this._changed = true;
            this.context.selected = currValue;
            this._expr_8 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_rowIdentity = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_9, currValue))) {
            this._changed = true;
            this.context.rowIdentity = currValue;
            this._expr_9 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_rowDetailTemplate = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_10, currValue))) {
            this._changed = true;
            this.context.rowDetailTemplate = currValue;
            this._expr_10 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_selectCheck = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_11, currValue))) {
            this._changed = true;
            this.context.selectCheck = currValue;
            this._expr_11 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_trackByProp = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_12, currValue))) {
            this._changed = true;
            this.context.trackByProp = currValue;
            this._expr_12 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_pageSize = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_13, currValue))) {
            this._changed = true;
            this.context.pageSize = currValue;
            this._expr_13 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_rows = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_14, currValue))) {
            this._changed = true;
            this.context.rows = currValue;
            this._expr_14 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_columns = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_15, currValue))) {
            this._changed = true;
            this.context.columns = currValue;
            this._expr_15 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_offset = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_16, currValue))) {
            this._changed = true;
            this.context.offset = currValue;
            this._expr_16 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_rowCount = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_17, currValue))) {
            this._changed = true;
            this.context.rowCount = currValue;
            this._expr_17 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_innerWidth = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_18, currValue))) {
            this._changed = true;
            this.context.innerWidth = currValue;
            this._expr_18 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.check_bodyHeight = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_19, currValue))) {
            this._changed = true;
            this.context.bodyHeight = currValue;
            this._expr_19 = currValue;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_DataTableBodyComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_20 = this.context.bodyWidth;
        if (import3.checkBinding(throwOnChange, this._expr_20, currVal_20)) {
            view.renderer.setElementStyle(el, 'width', ((view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_20) == null) ? null : view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_20).toString()));
            this._expr_20 = currVal_20;
        }
        var currVal_21 = this.context.bodyHeight;
        if (import3.checkBinding(throwOnChange, this._expr_21, currVal_21)) {
            view.renderer.setElementStyle(el, 'height', ((view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_21) == null) ? null : view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_21).toString()));
            this._expr_21 = currVal_21;
        }
    };
    Wrapper_DataTableBodyComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_DataTableBodyComponent.prototype.subscribe = function (view, _eventHandler, emit0, emit1, emit2, emit3, emit4, emit5) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.scroll.subscribe(_eventHandler.bind(view, 'scroll')));
        }
        if (emit1) {
            (this.subscription1 = this.context.page.subscribe(_eventHandler.bind(view, 'page')));
        }
        if (emit2) {
            (this.subscription2 = this.context.activate.subscribe(_eventHandler.bind(view, 'activate')));
        }
        if (emit3) {
            (this.subscription3 = this.context.select.subscribe(_eventHandler.bind(view, 'select')));
        }
        if (emit4) {
            (this.subscription4 = this.context.detailToggle.subscribe(_eventHandler.bind(view, 'detailToggle')));
        }
        if (emit5) {
            (this.subscription5 = this.context.rowContextmenu.subscribe(_eventHandler.bind(view, 'rowContextmenu')));
        }
    };
    return Wrapper_DataTableBodyComponent;
}());
var renderType_DataTableBodyComponent_Host = import3.createRenderComponentType('', 0, import6.ViewEncapsulation.None, [], {});
var View_DataTableBodyComponent_Host0 = (function (_super) {
    __extends(View_DataTableBodyComponent_Host0, _super);
    function View_DataTableBodyComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_DataTableBodyComponent_Host0, renderType_DataTableBodyComponent_Host, import7.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways);
    }
    View_DataTableBodyComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'datatable-body', new import3.InlineArray2(2, 'class', 'datatable-body'), rootSelector, null);
        this.compView_0 = new View_DataTableBodyComponent0(this.viewUtils, this, 0, this._el_0);
        this._DataTableBodyComponent_0_3 = new Wrapper_DataTableBodyComponent();
        this.compView_0.create(this._DataTableBodyComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import9.ComponentRef_(0, this, this._el_0, this._DataTableBodyComponent_0_3.context);
    };
    View_DataTableBodyComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.DataTableBodyComponent) && (0 === requestNodeIndex))) {
            return this._DataTableBodyComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_DataTableBodyComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._DataTableBodyComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._DataTableBodyComponent_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_DataTableBodyComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._DataTableBodyComponent_0_3.ngOnDestroy();
    };
    View_DataTableBodyComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_DataTableBodyComponent_Host0;
}(import2.AppView));
export var DataTableBodyComponentNgFactory = new import9.ComponentFactory('datatable-body', View_DataTableBodyComponent_Host0, import0.DataTableBodyComponent);
var styles_DataTableBodyComponent = [];
var View_DataTableBodyComponent1 = (function (_super) {
    __extends(View_DataTableBodyComponent1, _super);
    function View_DataTableBodyComponent1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_DataTableBodyComponent1, renderType_DataTableBodyComponent, import7.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_DataTableBodyComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'datatable-progress', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_0 = new import11.View_ProgressBarComponent0(this.viewUtils, this, 0, this._el_0);
        this._ProgressBarComponent_0_3 = new import11.Wrapper_ProgressBarComponent();
        this._text_1 = this.renderer.createText(null, '\n      ', null);
        this.compView_0.create(this._ProgressBarComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    };
    View_DataTableBodyComponent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import10.ProgressBarComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._ProgressBarComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_DataTableBodyComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._ProgressBarComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_DataTableBodyComponent1.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_DataTableBodyComponent1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_DataTableBodyComponent1;
}(import2.AppView));
var View_DataTableBodyComponent3 = (function (_super) {
    __extends(View_DataTableBodyComponent3, _super);
    function View_DataTableBodyComponent3(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_DataTableBodyComponent3, renderType_DataTableBodyComponent, import7.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_DataTableBodyComponent3.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'datatable-row-wrapper', new import3.InlineArray2(2, 'class', 'datatable-row-wrapper'), null);
        this.compView_0 = new import15.View_DataTableRowWrapperComponent0(this.viewUtils, this, 0, this._el_0);
        this._NgStyle_0_3 = new import14.Wrapper_NgStyle(this.parentView.parentView.parentView.injectorGet(import18.KeyValueDiffers, this.parentView.parentView.parentIndex), new import19.ElementRef(this._el_0), this.renderer);
        this._DataTableRowWrapperComponent_0_4 = new import15.Wrapper_DataTableRowWrapperComponent();
        this._text_1 = this.renderer.createText(null, '\n          ', null);
        this._el_2 = import3.createRenderElement(this.renderer, null, 'datatable-body-row', new import3.InlineArray4(4, 'class', 'datatable-body-row', 'tabindex', '-1'), null);
        this.compView_2 = new import17.View_DataTableBodyRowComponent0(this.viewUtils, this, 2, this._el_2);
        this._DataTableBodyRowComponent_2_3 = new import17.Wrapper_DataTableBodyRowComponent(new import19.ElementRef(this._el_2));
        this._text_3 = this.renderer.createText(null, '\n          ', null);
        this.compView_2.create(this._DataTableBodyRowComponent_2_3.context);
        this._text_4 = this.renderer.createText(null, '\n        ', null);
        this.compView_0.create(this._DataTableRowWrapperComponent_0_4.context);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray4(4, 'rowContextmenu', null, 'contextmenu', null), this.eventHandler(this.handleEvent_0));
        this._DataTableRowWrapperComponent_0_4.subscribe(this, this.eventHandler(this.handleEvent_0), true);
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_2, new import3.InlineArray4(4, 'activate', null, 'keydown', null), this.eventHandler(this.handleEvent_2));
        this._DataTableBodyRowComponent_2_3.subscribe(this, this.eventHandler(this.handleEvent_2), true);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._text_4
        ]), [
            disposable_0,
            disposable_1
        ]);
        return null;
    };
    View_DataTableBodyComponent3.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import16.DataTableBodyRowComponent) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 3)))) {
            return this._DataTableBodyRowComponent_2_3.context;
        }
        if (((token === import20.NgStyle) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 4)))) {
            return this._NgStyle_0_3.context;
        }
        if (((token === import13.DataTableRowWrapperComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 4)))) {
            return this._DataTableRowWrapperComponent_0_4.context;
        }
        return notFoundResult;
    };
    View_DataTableBodyComponent3.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.parentView.parentView.context.getRowsStyles(this.context.$implicit);
        this._NgStyle_0_3.check_ngStyle(currVal_0_0_0, throwOnChange, false);
        this._NgStyle_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_0_1_0 = this.parentView.parentView.context.rowDetailTemplate;
        this._DataTableRowWrapperComponent_0_4.check_rowDetailTemplate(currVal_0_1_0, throwOnChange, false);
        var currVal_0_1_1 = this.parentView.parentView.context.detailRowHeight;
        this._DataTableRowWrapperComponent_0_4.check_detailRowHeight(currVal_0_1_1, throwOnChange, false);
        var currVal_0_1_2 = (this.context.$implicit.$$expanded === 1);
        this._DataTableRowWrapperComponent_0_4.check_expanded(currVal_0_1_2, throwOnChange, false);
        var currVal_0_1_3 = this.context.$implicit;
        this._DataTableRowWrapperComponent_0_4.check_row(currVal_0_1_3, throwOnChange, false);
        this._DataTableRowWrapperComponent_0_4.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_2_0_0 = this.parentView.parentView.context.columns;
        this._DataTableBodyRowComponent_2_3.check_columns(currVal_2_0_0, throwOnChange, false);
        var currVal_2_0_1 = this.parentView.parentView.context.innerWidth;
        this._DataTableBodyRowComponent_2_3.check_innerWidth(currVal_2_0_1, throwOnChange, false);
        var currVal_2_0_2 = this.context.$implicit;
        this._DataTableBodyRowComponent_2_3.check_row(currVal_2_0_2, throwOnChange, false);
        var currVal_2_0_3 = this.parentView.parentView.context.offsetX;
        this._DataTableBodyRowComponent_2_3.check_offsetX(currVal_2_0_3, throwOnChange, false);
        var currVal_2_0_4 = this.parentView.parentView.context.rowHeight;
        this._DataTableBodyRowComponent_2_3.check_rowHeight(currVal_2_0_4, throwOnChange, false);
        var currVal_2_0_5 = this.parentView.parentView._DataTableSelectionComponent_1_3.context.getRowSelected(this.context.$implicit);
        this._DataTableBodyRowComponent_2_3.check_isSelected(currVal_2_0_5, throwOnChange, false);
        this._DataTableBodyRowComponent_2_3.ngDoCheck(this, this._el_2, throwOnChange);
        this._DataTableBodyRowComponent_2_3.checkHost(this, this.compView_2, this._el_2, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
        this.compView_2.internalDetectChanges(throwOnChange);
    };
    View_DataTableBodyComponent3.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this.compView_2.destroy();
        this._DataTableBodyRowComponent_2_3.ngOnDestroy();
        this._DataTableRowWrapperComponent_0_4.ngOnDestroy();
    };
    View_DataTableBodyComponent3.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_DataTableBodyComponent3.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) {
            cb(this._text_1, ctx);
            cb(this._el_2, ctx);
            cb(this._text_4, ctx);
        }
    };
    View_DataTableBodyComponent3.prototype.handleEvent_0 = function (eventName, $event) {
        this.compView_0.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DataTableRowWrapperComponent_0_4.handleEvent(eventName, $event) && result);
        if ((eventName == 'rowContextmenu')) {
            var pd_sub_0 = (this.parentView.parentView.context.rowContextmenu.emit($event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_DataTableBodyComponent3.prototype.handleEvent_2 = function (eventName, $event) {
        this.compView_2.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DataTableBodyRowComponent_2_3.handleEvent(eventName, $event) && result);
        if ((eventName == 'activate')) {
            var pd_sub_0 = (this.parentView.parentView._DataTableSelectionComponent_1_3.context.onActivate($event, this.context.index) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_DataTableBodyComponent3;
}(import2.AppView));
var View_DataTableBodyComponent2 = (function (_super) {
    __extends(View_DataTableBodyComponent2, _super);
    function View_DataTableBodyComponent2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_DataTableBodyComponent2, renderType_DataTableBodyComponent, import7.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_DataTableBodyComponent2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'datatable-scroller', new import3.InlineArray2(2, 'class', 'datatable-scroll'), null);
        this.compView_0 = new import22.View_ScrollerComponent0(this.viewUtils, this, 0, this._el_0);
        this._ScrollerComponent_0_3 = new import22.Wrapper_ScrollerComponent(new import19.ElementRef(this._el_0), this.renderer);
        this._text_1 = this.renderer.createText(null, '\n        ', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(null, null);
        this._vc_2 = new import12.ViewContainer(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import24.TemplateRef_(this, 2, this._anchor_2);
        this._NgFor_2_6 = new import23.Wrapper_NgFor(this._vc_2.vcRef, this._TemplateRef_2_5, this.parentView.parentView.injectorGet(import25.IterableDiffers, this.parentView.parentIndex), this.parentView.ref);
        this._text_3 = this.renderer.createText(null, '\n      ', null);
        this.compView_0.create(this._ScrollerComponent_0_3.context);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'scroll', null), this.eventHandler(this.handleEvent_0));
        this._ScrollerComponent_0_3.subscribe(this, this.eventHandler(this.handleEvent_0), true);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._anchor_2,
            this._text_3
        ]), [disposable_0]);
        return null;
    };
    View_DataTableBodyComponent2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import24.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import26.NgFor) && (2 === requestNodeIndex))) {
            return this._NgFor_2_6.context;
        }
        if (((token === import21.ScrollerComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) {
            return this._ScrollerComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_DataTableBodyComponent2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.parentView.context.scrollbarV;
        this._ScrollerComponent_0_3.check_scrollbarV(currVal_0_0_0, throwOnChange, false);
        var currVal_0_0_1 = this.parentView.context.scrollbarH;
        this._ScrollerComponent_0_3.check_scrollbarH(currVal_0_0_1, throwOnChange, false);
        var currVal_0_0_2 = this.parentView.context.scrollHeight;
        this._ScrollerComponent_0_3.check_scrollHeight(currVal_0_0_2, throwOnChange, false);
        var currVal_0_0_3 = this.parentView.context.columnGroupWidths.total;
        this._ScrollerComponent_0_3.check_scrollWidth(currVal_0_0_3, throwOnChange, false);
        this._ScrollerComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_2_0_0 = this.parentView.context.temp;
        this._NgFor_2_6.check_ngForOf(currVal_2_0_0, throwOnChange, false);
        var currVal_2_0_1 = this.parentView.context.rowTrackingFn;
        this._NgFor_2_6.check_ngForTrackBy(currVal_2_0_1, throwOnChange, false);
        this._NgFor_2_6.ngDoCheck(this, this._anchor_2, throwOnChange);
        this._vc_2.detectChangesInNestedViews(throwOnChange);
        this._ScrollerComponent_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_DataTableBodyComponent2.prototype.dirtyParentQueriesInternal = function () {
        this.parentView._viewQuery_ScrollerComponent_0.setDirty();
    };
    View_DataTableBodyComponent2.prototype.destroyInternal = function () {
        this._vc_2.destroyNestedViews();
        this.compView_0.destroy();
        this._ScrollerComponent_0_3.ngOnDestroy();
    };
    View_DataTableBodyComponent2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_DataTableBodyComponent2.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) {
            cb(this._text_1, ctx);
            cb(this._vc_2.nativeElement, ctx);
            this._vc_2.visitNestedViewRootNodes(cb, ctx);
            cb(this._text_3, ctx);
        }
    };
    View_DataTableBodyComponent2.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 2)) {
            return new View_DataTableBodyComponent3(this.viewUtils, this, 2, this._anchor_2, this._vc_2);
        }
        return null;
    };
    View_DataTableBodyComponent2.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'scroll')) {
            var pd_sub_0 = (this.parentView.context.onBodyScroll($event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_DataTableBodyComponent2;
}(import2.AppView));
var View_DataTableBodyComponent4 = (function (_super) {
    __extends(View_DataTableBodyComponent4, _super);
    function View_DataTableBodyComponent4(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_DataTableBodyComponent4, renderType_DataTableBodyComponent, import7.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_2 = import1.UNINITIALIZED;
    }
    View_DataTableBodyComponent4.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', new import3.InlineArray2(2, 'class', 'empty-row'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n      ', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    };
    View_DataTableBodyComponent4.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2 = this.parentView.context.emptyMessage;
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementProperty(this._el_0, 'innerHTML', this.viewUtils.sanitizer.sanitize(import4.SecurityContext.HTML, currVal_2));
            this._expr_2 = currVal_2;
        }
    };
    View_DataTableBodyComponent4.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_DataTableBodyComponent4;
}(import2.AppView));
var renderType_DataTableBodyComponent = import3.createRenderComponentType('', 0, import6.ViewEncapsulation.None, styles_DataTableBodyComponent, {});
export var View_DataTableBodyComponent0 = (function (_super) {
    __extends(View_DataTableBodyComponent0, _super);
    function View_DataTableBodyComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_DataTableBodyComponent0, renderType_DataTableBodyComponent, import7.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways);
    }
    View_DataTableBodyComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._viewQuery_ScrollerComponent_0 = new import27.QueryList();
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'datatable-selection', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_1 = new import29.View_DataTableSelectionComponent0(this.viewUtils, this, 1, this._el_1);
        this._DataTableSelectionComponent_1_3 = new import29.Wrapper_DataTableSelectionComponent();
        this._text_2 = this.renderer.createText(null, '\n      ', null);
        this._anchor_3 = this.renderer.createTemplateAnchor(null, null);
        this._vc_3 = new import12.ViewContainer(3, 1, this, this._anchor_3);
        this._TemplateRef_3_5 = new import24.TemplateRef_(this, 3, this._anchor_3);
        this._NgIf_3_6 = new import30.Wrapper_NgIf(this._vc_3.vcRef, this._TemplateRef_3_5);
        this._text_4 = this.renderer.createText(null, '\n      ', null);
        this._anchor_5 = this.renderer.createTemplateAnchor(null, null);
        this._vc_5 = new import12.ViewContainer(5, 1, this, this._anchor_5);
        this._TemplateRef_5_5 = new import24.TemplateRef_(this, 5, this._anchor_5);
        this._NgIf_5_6 = new import30.Wrapper_NgIf(this._vc_5.vcRef, this._TemplateRef_5_5);
        this._text_6 = this.renderer.createText(null, '\n      ', null);
        this._anchor_7 = this.renderer.createTemplateAnchor(null, null);
        this._vc_7 = new import12.ViewContainer(7, 1, this, this._anchor_7);
        this._TemplateRef_7_5 = new import24.TemplateRef_(this, 7, this._anchor_7);
        this._NgIf_7_6 = new import30.Wrapper_NgIf(this._vc_7.vcRef, this._TemplateRef_7_5);
        this._text_8 = this.renderer.createText(null, '\n    ', null);
        this.compView_1.create(this._DataTableSelectionComponent_1_3.context);
        this._text_9 = this.renderer.createText(parentRenderNode, '\n  ', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_1, new import3.InlineArray4(4, 'select', null, 'activate', null), this.eventHandler(this.handleEvent_1));
        this._DataTableSelectionComponent_1_3.subscribe(this, this.eventHandler(this.handleEvent_1), true, true);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._anchor_3,
            this._text_4,
            this._anchor_5,
            this._text_6,
            this._anchor_7,
            this._text_8,
            this._text_9
        ]), [disposable_0]);
        return null;
    };
    View_DataTableBodyComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import24.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import31.NgIf) && (3 === requestNodeIndex))) {
            return this._NgIf_3_6.context;
        }
        if (((token === import24.TemplateRef) && (5 === requestNodeIndex))) {
            return this._TemplateRef_5_5;
        }
        if (((token === import31.NgIf) && (5 === requestNodeIndex))) {
            return this._NgIf_5_6.context;
        }
        if (((token === import24.TemplateRef) && (7 === requestNodeIndex))) {
            return this._TemplateRef_7_5;
        }
        if (((token === import31.NgIf) && (7 === requestNodeIndex))) {
            return this._NgIf_7_6.context;
        }
        if (((token === import28.DataTableSelectionComponent) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 8)))) {
            return this._DataTableSelectionComponent_1_3.context;
        }
        return notFoundResult;
    };
    View_DataTableBodyComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1_0_0 = this.context.temp;
        this._DataTableSelectionComponent_1_3.check_rows(currVal_1_0_0, throwOnChange, false);
        var currVal_1_0_1 = this.context.selected;
        this._DataTableSelectionComponent_1_3.check_selected(currVal_1_0_1, throwOnChange, false);
        var currVal_1_0_2 = this.context.selectEnabled;
        this._DataTableSelectionComponent_1_3.check_selectEnabled(currVal_1_0_2, throwOnChange, false);
        var currVal_1_0_3 = this.context.selectionType;
        this._DataTableSelectionComponent_1_3.check_selectionType(currVal_1_0_3, throwOnChange, false);
        var currVal_1_0_4 = this.context.rowIdentity;
        this._DataTableSelectionComponent_1_3.check_rowIdentity(currVal_1_0_4, throwOnChange, false);
        var currVal_1_0_5 = this.context.selectCheck;
        this._DataTableSelectionComponent_1_3.check_selectCheck(currVal_1_0_5, throwOnChange, false);
        this._DataTableSelectionComponent_1_3.ngDoCheck(this, this._el_1, throwOnChange);
        var currVal_3_0_0 = this.context.loadingIndicator;
        this._NgIf_3_6.check_ngIf(currVal_3_0_0, throwOnChange, false);
        this._NgIf_3_6.ngDoCheck(this, this._anchor_3, throwOnChange);
        var currVal_5_0_0 = ((this.context.rows == null) ? null : this.context.rows.length);
        this._NgIf_5_6.check_ngIf(currVal_5_0_0, throwOnChange, false);
        this._NgIf_5_6.ngDoCheck(this, this._anchor_5, throwOnChange);
        var currVal_7_0_0 = !((this.context.rows == null) ? null : this.context.rows.length);
        this._NgIf_7_6.check_ngIf(currVal_7_0_0, throwOnChange, false);
        this._NgIf_7_6.ngDoCheck(this, this._anchor_7, throwOnChange);
        this._vc_3.detectChangesInNestedViews(throwOnChange);
        this._vc_5.detectChangesInNestedViews(throwOnChange);
        this._vc_7.detectChangesInNestedViews(throwOnChange);
        this.compView_1.internalDetectChanges(throwOnChange);
        if (!throwOnChange) {
            if (this._viewQuery_ScrollerComponent_0.dirty) {
                this._viewQuery_ScrollerComponent_0.reset([this._vc_5.mapNestedViews(View_DataTableBodyComponent2, function (nestedView) {
                        return [nestedView._ScrollerComponent_0_3.context];
                    })]);
                this.context.scroller = this._viewQuery_ScrollerComponent_0.first;
            }
        }
    };
    View_DataTableBodyComponent0.prototype.destroyInternal = function () {
        this._vc_3.destroyNestedViews();
        this._vc_5.destroyNestedViews();
        this._vc_7.destroyNestedViews();
        this.compView_1.destroy();
        this._DataTableSelectionComponent_1_3.ngOnDestroy();
    };
    View_DataTableBodyComponent0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 1) && (ngContentIndex == 0))) {
            cb(this._text_2, ctx);
            cb(this._vc_3.nativeElement, ctx);
            this._vc_3.visitNestedViewRootNodes(cb, ctx);
            cb(this._text_4, ctx);
            cb(this._vc_5.nativeElement, ctx);
            this._vc_5.visitNestedViewRootNodes(cb, ctx);
            cb(this._text_6, ctx);
            cb(this._vc_7.nativeElement, ctx);
            this._vc_7.visitNestedViewRootNodes(cb, ctx);
            cb(this._text_8, ctx);
        }
    };
    View_DataTableBodyComponent0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 3)) {
            return new View_DataTableBodyComponent1(this.viewUtils, this, 3, this._anchor_3, this._vc_3);
        }
        if ((nodeIndex == 5)) {
            return new View_DataTableBodyComponent2(this.viewUtils, this, 5, this._anchor_5, this._vc_5);
        }
        if ((nodeIndex == 7)) {
            return new View_DataTableBodyComponent4(this.viewUtils, this, 7, this._anchor_7, this._vc_7);
        }
        return null;
    };
    View_DataTableBodyComponent0.prototype.handleEvent_1 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'select')) {
            var pd_sub_0 = (this.context.select.emit($event) !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'activate')) {
            var pd_sub_1 = (this.context.activate.emit($event) !== false);
            result = (pd_sub_1 && result);
        }
        return result;
    };
    return View_DataTableBodyComponent0;
}(import2.AppView));
//# sourceMappingURL=body.component.ngfactory.js.map