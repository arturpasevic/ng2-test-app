/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@swimlane/ngx-datatable/release/components/datatable.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/query_list';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/constants';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/core/src/linker/element_ref';
import * as import11 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import12 from '@swimlane/ngx-datatable/release/components/header/header.component';
import * as import13 from './header/header.component.ngfactory';
import * as import14 from '@angular/core/src/linker/view_container';
import * as import15 from '@swimlane/ngx-datatable/release/components/footer/footer.component';
import * as import16 from './footer/footer.component.ngfactory';
import * as import17 from '../directives/visibility.directive.ngfactory';
import * as import18 from '../../../../@angular/common/src/directives/ng_if.ngfactory';
import * as import19 from '@swimlane/ngx-datatable/release/components/body/body.component';
import * as import20 from './body/body.component.ngfactory';
import * as import21 from '@angular/core/src/zone/ng_zone';
import * as import22 from '@angular/core/src/linker/template_ref';
import * as import23 from '@angular/common/src/directives/ng_if';
import * as import24 from '@swimlane/ngx-datatable/release/directives/visibility.directive';
export var Wrapper_DatatableComponent = (function () {
    function Wrapper_DatatableComponent(p0, p1) {
        this._changed = false;
        this.context = new import0.DatatableComponent(p0, p1);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
        this._expr_5 = import1.UNINITIALIZED;
        this._expr_6 = import1.UNINITIALIZED;
        this._expr_7 = import1.UNINITIALIZED;
        this._expr_8 = import1.UNINITIALIZED;
        this._expr_9 = import1.UNINITIALIZED;
        this._expr_10 = import1.UNINITIALIZED;
        this._expr_11 = import1.UNINITIALIZED;
        this._expr_12 = import1.UNINITIALIZED;
        this._expr_13 = import1.UNINITIALIZED;
        this._expr_14 = import1.UNINITIALIZED;
        this._expr_15 = import1.UNINITIALIZED;
        this._expr_16 = import1.UNINITIALIZED;
        this._expr_17 = import1.UNINITIALIZED;
        this._expr_18 = import1.UNINITIALIZED;
        this._expr_19 = import1.UNINITIALIZED;
        this._expr_20 = import1.UNINITIALIZED;
        this._expr_21 = import1.UNINITIALIZED;
        this._expr_22 = import1.UNINITIALIZED;
        this._expr_23 = import1.UNINITIALIZED;
        this._expr_24 = import1.UNINITIALIZED;
        this._expr_25 = import1.UNINITIALIZED;
        this._expr_26 = import1.UNINITIALIZED;
        this._expr_27 = import1.UNINITIALIZED;
        this._expr_28 = import1.UNINITIALIZED;
        this._expr_29 = import1.UNINITIALIZED;
        this._expr_30 = import1.UNINITIALIZED;
        this._expr_31 = import1.UNINITIALIZED;
        this._expr_32 = import1.UNINITIALIZED;
        this._expr_33 = import1.UNINITIALIZED;
        this._expr_34 = import1.UNINITIALIZED;
        this._expr_35 = import1.UNINITIALIZED;
    }
    Wrapper_DatatableComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_DatatableComponent.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
        (this.subscription1 && this.subscription1.unsubscribe());
        (this.subscription2 && this.subscription2.unsubscribe());
        (this.subscription3 && this.subscription3.unsubscribe());
        (this.subscription4 && this.subscription4.unsubscribe());
        (this.subscription5 && this.subscription5.unsubscribe());
        (this.subscription6 && this.subscription6.unsubscribe());
        (this.subscription7 && this.subscription7.unsubscribe());
        (this.subscription8 && this.subscription8.unsubscribe());
    };
    Wrapper_DatatableComponent.prototype.check_rows = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.rows = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_columns = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.columns = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_selected = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.selected = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_scrollbarV = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.scrollbarV = currValue;
            this._expr_3 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_scrollbarH = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_4, currValue))) {
            this._changed = true;
            this.context.scrollbarH = currValue;
            this._expr_4 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_rowHeight = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_5, currValue))) {
            this._changed = true;
            this.context.rowHeight = currValue;
            this._expr_5 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_detailRowHeight = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_6, currValue))) {
            this._changed = true;
            this.context.detailRowHeight = currValue;
            this._expr_6 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_columnMode = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_7, currValue))) {
            this._changed = true;
            this.context.columnMode = currValue;
            this._expr_7 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_headerHeight = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_8, currValue))) {
            this._changed = true;
            this.context.headerHeight = currValue;
            this._expr_8 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_footerHeight = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_9, currValue))) {
            this._changed = true;
            this.context.footerHeight = currValue;
            this._expr_9 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_externalPaging = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_10, currValue))) {
            this._changed = true;
            this.context.externalPaging = currValue;
            this._expr_10 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_externalSorting = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_11, currValue))) {
            this._changed = true;
            this.context.externalSorting = currValue;
            this._expr_11 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_limit = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_12, currValue))) {
            this._changed = true;
            this.context.limit = currValue;
            this._expr_12 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_count = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_13, currValue))) {
            this._changed = true;
            this.context.count = currValue;
            this._expr_13 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_offset = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_14, currValue))) {
            this._changed = true;
            this.context.offset = currValue;
            this._expr_14 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_loadingIndicator = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_15, currValue))) {
            this._changed = true;
            this.context.loadingIndicator = currValue;
            this._expr_15 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_selectionType = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_16, currValue))) {
            this._changed = true;
            this.context.selectionType = currValue;
            this._expr_16 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_reorderable = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_17, currValue))) {
            this._changed = true;
            this.context.reorderable = currValue;
            this._expr_17 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_sortType = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_18, currValue))) {
            this._changed = true;
            this.context.sortType = currValue;
            this._expr_18 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_sorts = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_19, currValue))) {
            this._changed = true;
            this.context.sorts = currValue;
            this._expr_19 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_rowDetailTemplate = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_20, currValue))) {
            this._changed = true;
            this.context.rowDetailTemplate = currValue;
            this._expr_20 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_cssClasses = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_21, currValue))) {
            this._changed = true;
            this.context.cssClasses = currValue;
            this._expr_21 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_messages = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_22, currValue))) {
            this._changed = true;
            this.context.messages = currValue;
            this._expr_22 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_rowIdentity = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_23, currValue))) {
            this._changed = true;
            this.context.rowIdentity = currValue;
            this._expr_23 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_selectCheck = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_24, currValue))) {
            this._changed = true;
            this.context.selectCheck = currValue;
            this._expr_24 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.check_trackByProp = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_25, currValue))) {
            this._changed = true;
            this.context.trackByProp = currValue;
            this._expr_25 = currValue;
        }
    };
    Wrapper_DatatableComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
            this.context.ngDoCheck();
        }
        return changed;
    };
    Wrapper_DatatableComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_26 = this.context.isFixedHeader;
        if (import3.checkBinding(throwOnChange, this._expr_26, currVal_26)) {
            view.renderer.setElementClass(el, 'fixed-header', currVal_26);
            this._expr_26 = currVal_26;
        }
        var currVal_27 = this.context.isFixedRow;
        if (import3.checkBinding(throwOnChange, this._expr_27, currVal_27)) {
            view.renderer.setElementClass(el, 'fixed-row', currVal_27);
            this._expr_27 = currVal_27;
        }
        var currVal_28 = this.context.isVertScroll;
        if (import3.checkBinding(throwOnChange, this._expr_28, currVal_28)) {
            view.renderer.setElementClass(el, 'scroll-vertical', currVal_28);
            this._expr_28 = currVal_28;
        }
        var currVal_29 = this.context.isHorScroll;
        if (import3.checkBinding(throwOnChange, this._expr_29, currVal_29)) {
            view.renderer.setElementClass(el, 'scroll-horz', currVal_29);
            this._expr_29 = currVal_29;
        }
        var currVal_30 = this.context.isSelectable;
        if (import3.checkBinding(throwOnChange, this._expr_30, currVal_30)) {
            view.renderer.setElementClass(el, 'selectable', currVal_30);
            this._expr_30 = currVal_30;
        }
        var currVal_31 = this.context.isCheckboxSelection;
        if (import3.checkBinding(throwOnChange, this._expr_31, currVal_31)) {
            view.renderer.setElementClass(el, 'checkbox-selection', currVal_31);
            this._expr_31 = currVal_31;
        }
        var currVal_32 = this.context.isCellSelection;
        if (import3.checkBinding(throwOnChange, this._expr_32, currVal_32)) {
            view.renderer.setElementClass(el, 'cell-selection', currVal_32);
            this._expr_32 = currVal_32;
        }
        var currVal_33 = this.context.isSingleSelection;
        if (import3.checkBinding(throwOnChange, this._expr_33, currVal_33)) {
            view.renderer.setElementClass(el, 'single-selection', currVal_33);
            this._expr_33 = currVal_33;
        }
        var currVal_34 = this.context.isMultiSelection;
        if (import3.checkBinding(throwOnChange, this._expr_34, currVal_34)) {
            view.renderer.setElementClass(el, 'multi-selection', currVal_34);
            this._expr_34 = currVal_34;
        }
        var currVal_35 = this.context.isMultiClickSelection;
        if (import3.checkBinding(throwOnChange, this._expr_35, currVal_35)) {
            view.renderer.setElementClass(el, 'multi-click-selection', currVal_35);
            this._expr_35 = currVal_35;
        }
    };
    Wrapper_DatatableComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        if ((eventName == 'window:resize')) {
            var pd_sub_0 = (this.context.onWindowResize() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    Wrapper_DatatableComponent.prototype.subscribe = function (view, _eventHandler, emit0, emit1, emit2, emit3, emit4, emit5, emit6, emit7, emit8) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.scroll.subscribe(_eventHandler.bind(view, 'scroll')));
        }
        if (emit1) {
            (this.subscription1 = this.context.activate.subscribe(_eventHandler.bind(view, 'activate')));
        }
        if (emit2) {
            (this.subscription2 = this.context.select.subscribe(_eventHandler.bind(view, 'select')));
        }
        if (emit3) {
            (this.subscription3 = this.context.sort.subscribe(_eventHandler.bind(view, 'sort')));
        }
        if (emit4) {
            (this.subscription4 = this.context.page.subscribe(_eventHandler.bind(view, 'page')));
        }
        if (emit5) {
            (this.subscription5 = this.context.detailToggle.subscribe(_eventHandler.bind(view, 'detailToggle')));
        }
        if (emit6) {
            (this.subscription6 = this.context.reorder.subscribe(_eventHandler.bind(view, 'reorder')));
        }
        if (emit7) {
            (this.subscription7 = this.context.resize.subscribe(_eventHandler.bind(view, 'resize')));
        }
        if (emit8) {
            (this.subscription8 = this.context.rowContextmenu.subscribe(_eventHandler.bind(view, 'rowContextmenu')));
        }
    };
    return Wrapper_DatatableComponent;
}());
var renderType_DatatableComponent_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_DatatableComponent_Host0 = (function (_super) {
    __extends(View_DatatableComponent_Host0, _super);
    function View_DatatableComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_DatatableComponent_Host0, renderType_DatatableComponent_Host, import7.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways);
    }
    View_DatatableComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ngx-datatable', new import3.InlineArray2(2, 'class', 'datatable'), rootSelector, null);
        this.compView_0 = new View_DatatableComponent0(this.viewUtils, this, 0, this._el_0);
        this._DatatableComponent_0_3 = new Wrapper_DatatableComponent(new import10.ElementRef(this._el_0), this.injectorGet(import11.KeyValueDiffers, this.parentIndex));
        this._query_DataTableColumnDirective_0_0 = new import6.QueryList();
        this._query_DatatableRowDetailDirective_0_1 = new import6.QueryList();
        this.compView_0.create(this._DatatableComponent_0_3.context);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'resize', 'window'), this.eventHandler(this.handleEvent_0));
        this._query_DatatableRowDetailDirective_0_1.reset([]);
        this._DatatableComponent_0_3.context.rowDetailTemplateChild = this._query_DatatableRowDetailDirective_0_1.first;
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), [disposable_0]);
        return new import9.ComponentRef_(0, this, this._el_0, this._DatatableComponent_0_3.context);
    };
    View_DatatableComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.DatatableComponent) && (0 === requestNodeIndex))) {
            return this._DatatableComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_DatatableComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._DatatableComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        if (!throwOnChange) {
            if (this._query_DataTableColumnDirective_0_0.dirty) {
                this._query_DataTableColumnDirective_0_0.reset([]);
                this._DatatableComponent_0_3.context.columnTemplates = this._query_DataTableColumnDirective_0_0;
                this._query_DataTableColumnDirective_0_0.notifyOnChanges();
            }
        }
        this._DatatableComponent_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._DatatableComponent_0_3.context.ngAfterViewInit();
            }
        }
    };
    View_DatatableComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._DatatableComponent_0_3.ngOnDestroy();
    };
    View_DatatableComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_DatatableComponent_Host0.prototype.handleEvent_0 = function (eventName, $event) {
        this.compView_0.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DatatableComponent_0_3.handleEvent(eventName, $event) && result);
        return result;
    };
    return View_DatatableComponent_Host0;
}(import2.AppView));
export var DatatableComponentNgFactory = new import9.ComponentFactory('ngx-datatable', View_DatatableComponent_Host0, import0.DatatableComponent);
var styles_DatatableComponent = [];
var View_DatatableComponent1 = (function (_super) {
    __extends(View_DatatableComponent1, _super);
    function View_DatatableComponent1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_DatatableComponent1, renderType_DatatableComponent, import7.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_DatatableComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'datatable-header', new import3.InlineArray2(2, 'class', 'datatable-header'), null);
        this.compView_0 = new import13.View_DataTableHeaderComponent0(this.viewUtils, this, 0, this._el_0);
        this._DataTableHeaderComponent_0_3 = new import13.Wrapper_DataTableHeaderComponent();
        this._text_1 = this.renderer.createText(null, '\n      ', null);
        this.compView_0.create(this._DataTableHeaderComponent_0_3.context);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray8(8, 'sort', null, 'resize', null, 'reorder', null, 'select', null), this.eventHandler(this.handleEvent_0));
        this._DataTableHeaderComponent_0_3.subscribe(this, this.eventHandler(this.handleEvent_0), true, true, true, true);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), [disposable_0]);
        return null;
    };
    View_DatatableComponent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import12.DataTableHeaderComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._DataTableHeaderComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_DatatableComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.parentView.context.cssClasses.sortAscending;
        this._DataTableHeaderComponent_0_3.check_sortAscendingIcon(currVal_0_0_0, throwOnChange, false);
        var currVal_0_0_1 = this.parentView.context.cssClasses.sortDescending;
        this._DataTableHeaderComponent_0_3.check_sortDescendingIcon(currVal_0_0_1, throwOnChange, false);
        var currVal_0_0_2 = this.parentView.context.scrollbarH;
        this._DataTableHeaderComponent_0_3.check_scrollbarH(currVal_0_0_2, throwOnChange, false);
        var currVal_0_0_3 = this.parentView.context.innerWidth;
        this._DataTableHeaderComponent_0_3.check_innerWidth(currVal_0_0_3, throwOnChange, false);
        var currVal_0_0_4 = this.parentView.context.offsetX;
        this._DataTableHeaderComponent_0_3.check_offsetX(currVal_0_0_4, throwOnChange, false);
        var currVal_0_0_5 = this.parentView.context.sorts;
        this._DataTableHeaderComponent_0_3.check_sorts(currVal_0_0_5, throwOnChange, false);
        var currVal_0_0_6 = this.parentView.context.sortType;
        this._DataTableHeaderComponent_0_3.check_sortType(currVal_0_0_6, throwOnChange, false);
        var currVal_0_0_7 = this.parentView.context.allRowsSelected;
        this._DataTableHeaderComponent_0_3.check_allRowsSelected(currVal_0_0_7, throwOnChange, false);
        var currVal_0_0_8 = this.parentView.context.selectionType;
        this._DataTableHeaderComponent_0_3.check_selectionType(currVal_0_0_8, throwOnChange, false);
        var currVal_0_0_9 = this.parentView.context.reorderable;
        this._DataTableHeaderComponent_0_3.check_reorderable(currVal_0_0_9, throwOnChange, false);
        var currVal_0_0_10 = this.parentView.context.headerHeight;
        this._DataTableHeaderComponent_0_3.check_headerHeight(currVal_0_0_10, throwOnChange, false);
        var currVal_0_0_11 = this.parentView.context.columns;
        this._DataTableHeaderComponent_0_3.check_columns(currVal_0_0_11, throwOnChange, false);
        this._DataTableHeaderComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._DataTableHeaderComponent_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_DatatableComponent1.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._DataTableHeaderComponent_0_3.ngOnDestroy();
    };
    View_DatatableComponent1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_DatatableComponent1.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'sort')) {
            var pd_sub_0 = (this.parentView.context.onColumnSort($event) !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'resize')) {
            var pd_sub_1 = (this.parentView.context.onColumnResize($event) !== false);
            result = (pd_sub_1 && result);
        }
        if ((eventName == 'reorder')) {
            var pd_sub_2 = (this.parentView.context.onColumnReorder($event) !== false);
            result = (pd_sub_2 && result);
        }
        if ((eventName == 'select')) {
            var pd_sub_3 = (this.parentView.context.onHeaderSelect($event) !== false);
            result = (pd_sub_3 && result);
        }
        return result;
    };
    return View_DatatableComponent1;
}(import2.AppView));
var View_DatatableComponent2 = (function (_super) {
    __extends(View_DatatableComponent2, _super);
    function View_DatatableComponent2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_DatatableComponent2, renderType_DatatableComponent, import7.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_DatatableComponent2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'datatable-footer', new import3.InlineArray2(2, 'class', 'datatable-footer'), null);
        this.compView_0 = new import16.View_DataTableFooterComponent0(this.viewUtils, this, 0, this._el_0);
        this._DataTableFooterComponent_0_3 = new import16.Wrapper_DataTableFooterComponent();
        this._text_1 = this.renderer.createText(null, '\n      ', null);
        this.compView_0.create(this._DataTableFooterComponent_0_3.context);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'page', null), this.eventHandler(this.handleEvent_0));
        this._DataTableFooterComponent_0_3.subscribe(this, this.eventHandler(this.handleEvent_0), true);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), [disposable_0]);
        return null;
    };
    View_DatatableComponent2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import15.DataTableFooterComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._DataTableFooterComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_DatatableComponent2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.parentView.context.footerHeight;
        this._DataTableFooterComponent_0_3.check_footerHeight(currVal_0_0_0, throwOnChange, false);
        var currVal_0_0_1 = this.parentView.context.rowCount;
        this._DataTableFooterComponent_0_3.check_rowCount(currVal_0_0_1, throwOnChange, false);
        var currVal_0_0_2 = this.parentView.context.pageSize;
        this._DataTableFooterComponent_0_3.check_pageSize(currVal_0_0_2, throwOnChange, false);
        var currVal_0_0_3 = this.parentView.context.offset;
        this._DataTableFooterComponent_0_3.check_offset(currVal_0_0_3, throwOnChange, false);
        var currVal_0_0_4 = this.parentView.context.cssClasses.pagerLeftArrow;
        this._DataTableFooterComponent_0_3.check_pagerLeftArrowIcon(currVal_0_0_4, throwOnChange, false);
        var currVal_0_0_5 = this.parentView.context.cssClasses.pagerRightArrow;
        this._DataTableFooterComponent_0_3.check_pagerRightArrowIcon(currVal_0_0_5, throwOnChange, false);
        var currVal_0_0_6 = this.parentView.context.cssClasses.pagerPrevious;
        this._DataTableFooterComponent_0_3.check_pagerPreviousIcon(currVal_0_0_6, throwOnChange, false);
        var currVal_0_0_7 = this.parentView.context.cssClasses.pagerNext;
        this._DataTableFooterComponent_0_3.check_pagerNextIcon(currVal_0_0_7, throwOnChange, false);
        var currVal_0_0_8 = this.parentView.context.messages.totalMessage;
        this._DataTableFooterComponent_0_3.check_totalMessage(currVal_0_0_8, throwOnChange, false);
        if (this._DataTableFooterComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_DatatableComponent2.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._DataTableFooterComponent_0_3.ngOnDestroy();
    };
    View_DatatableComponent2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_DatatableComponent2.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'page')) {
            var pd_sub_0 = (this.parentView.context.onFooterPage($event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_DatatableComponent2;
}(import2.AppView));
var renderType_DatatableComponent = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, styles_DatatableComponent, {});
export var View_DatatableComponent0 = (function (_super) {
    __extends(View_DatatableComponent0, _super);
    function View_DatatableComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_DatatableComponent0, renderType_DatatableComponent, import7.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways);
    }
    View_DatatableComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._viewQuery_DataTableBodyComponent_0 = new import6.QueryList();
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'visibility-observer', ''), null);
        this._VisibilityDirective_1_3 = new import17.Wrapper_VisibilityDirective(new import10.ElementRef(this._el_1), this.parentView.injectorGet(import21.NgZone, this.parentIndex));
        this._text_2 = this.renderer.createText(this._el_1, '\n      ', null);
        this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1, null);
        this._vc_3 = new import14.ViewContainer(3, 1, this, this._anchor_3);
        this._TemplateRef_3_5 = new import22.TemplateRef_(this, 3, this._anchor_3);
        this._NgIf_3_6 = new import18.Wrapper_NgIf(this._vc_3.vcRef, this._TemplateRef_3_5);
        this._text_4 = this.renderer.createText(this._el_1, '\n      ', null);
        this._el_5 = import3.createRenderElement(this.renderer, this._el_1, 'datatable-body', new import3.InlineArray2(2, 'class', 'datatable-body'), null);
        this.compView_5 = new import20.View_DataTableBodyComponent0(this.viewUtils, this, 5, this._el_5);
        this._DataTableBodyComponent_5_3 = new import20.Wrapper_DataTableBodyComponent();
        this._text_6 = this.renderer.createText(null, '\n      ', null);
        this.compView_5.create(this._DataTableBodyComponent_5_3.context);
        this._text_7 = this.renderer.createText(this._el_1, '\n      ', null);
        this._anchor_8 = this.renderer.createTemplateAnchor(this._el_1, null);
        this._vc_8 = new import14.ViewContainer(8, 1, this, this._anchor_8);
        this._TemplateRef_8_5 = new import22.TemplateRef_(this, 8, this._anchor_8);
        this._NgIf_8_6 = new import18.Wrapper_NgIf(this._vc_8.vcRef, this._TemplateRef_8_5);
        this._text_9 = this.renderer.createText(this._el_1, '\n    ', null);
        this._text_10 = this.renderer.createText(parentRenderNode, '\n  ', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_1, new import3.InlineArray2(2, 'visible', null), this.eventHandler(this.handleEvent_1));
        this._VisibilityDirective_1_3.subscribe(this, this.eventHandler(this.handleEvent_1), true);
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_5, new import3.InlineArray16(12, 'page', null, 'activate', null, 'rowContextmenu', null, 'select', null, 'detailToggle', null, 'scroll', null), this.eventHandler(this.handleEvent_5));
        this._DataTableBodyComponent_5_3.subscribe(this, this.eventHandler(this.handleEvent_5), true, true, true, true, true, true);
        this._viewQuery_DataTableBodyComponent_0.reset([this._DataTableBodyComponent_5_3.context]);
        this.context.bodyComponent = this._viewQuery_DataTableBodyComponent_0.first;
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._anchor_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._text_7,
            this._anchor_8,
            this._text_9,
            this._text_10
        ]), [
            disposable_0,
            disposable_1
        ]);
        return null;
    };
    View_DatatableComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import22.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import23.NgIf) && (3 === requestNodeIndex))) {
            return this._NgIf_3_6.context;
        }
        if (((token === import19.DataTableBodyComponent) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 6)))) {
            return this._DataTableBodyComponent_5_3.context;
        }
        if (((token === import22.TemplateRef) && (8 === requestNodeIndex))) {
            return this._TemplateRef_8_5;
        }
        if (((token === import23.NgIf) && (8 === requestNodeIndex))) {
            return this._NgIf_8_6.context;
        }
        if (((token === import24.VisibilityDirective) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 9)))) {
            return this._VisibilityDirective_1_3.context;
        }
        return notFoundResult;
    };
    View_DatatableComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        this._VisibilityDirective_1_3.ngDoCheck(this, this._el_1, throwOnChange);
        var currVal_3_0_0 = this.context.headerHeight;
        this._NgIf_3_6.check_ngIf(currVal_3_0_0, throwOnChange, false);
        this._NgIf_3_6.ngDoCheck(this, this._anchor_3, throwOnChange);
        var currVal_5_0_0 = this.context.scrollbarV;
        this._DataTableBodyComponent_5_3.check_scrollbarV(currVal_5_0_0, throwOnChange, false);
        var currVal_5_0_1 = this.context.scrollbarH;
        this._DataTableBodyComponent_5_3.check_scrollbarH(currVal_5_0_1, throwOnChange, false);
        var currVal_5_0_2 = this.context.loadingIndicator;
        this._DataTableBodyComponent_5_3.check_loadingIndicator(currVal_5_0_2, throwOnChange, false);
        var currVal_5_0_3 = this.context.rowHeight;
        this._DataTableBodyComponent_5_3.check_rowHeight(currVal_5_0_3, throwOnChange, false);
        var currVal_5_0_4 = this.context.offsetX;
        this._DataTableBodyComponent_5_3.check_offsetX(currVal_5_0_4, throwOnChange, false);
        var currVal_5_0_5 = this.context.detailRowHeight;
        this._DataTableBodyComponent_5_3.check_detailRowHeight(currVal_5_0_5, throwOnChange, false);
        var currVal_5_0_6 = this.context.messages.emptyMessage;
        this._DataTableBodyComponent_5_3.check_emptyMessage(currVal_5_0_6, throwOnChange, false);
        var currVal_5_0_7 = this.context.selectionType;
        this._DataTableBodyComponent_5_3.check_selectionType(currVal_5_0_7, throwOnChange, false);
        var currVal_5_0_8 = this.context.selected;
        this._DataTableBodyComponent_5_3.check_selected(currVal_5_0_8, throwOnChange, false);
        var currVal_5_0_9 = this.context.rowIdentity;
        this._DataTableBodyComponent_5_3.check_rowIdentity(currVal_5_0_9, throwOnChange, false);
        var currVal_5_0_10 = this.context.rowDetailTemplate;
        this._DataTableBodyComponent_5_3.check_rowDetailTemplate(currVal_5_0_10, throwOnChange, false);
        var currVal_5_0_11 = this.context.selectCheck;
        this._DataTableBodyComponent_5_3.check_selectCheck(currVal_5_0_11, throwOnChange, false);
        var currVal_5_0_12 = this.context.trackByProp;
        this._DataTableBodyComponent_5_3.check_trackByProp(currVal_5_0_12, throwOnChange, false);
        var currVal_5_0_13 = this.context.pageSize;
        this._DataTableBodyComponent_5_3.check_pageSize(currVal_5_0_13, throwOnChange, false);
        var currVal_5_0_14 = this.context.rows;
        this._DataTableBodyComponent_5_3.check_rows(currVal_5_0_14, throwOnChange, false);
        var currVal_5_0_15 = this.context.columns;
        this._DataTableBodyComponent_5_3.check_columns(currVal_5_0_15, throwOnChange, false);
        var currVal_5_0_16 = this.context.offset;
        this._DataTableBodyComponent_5_3.check_offset(currVal_5_0_16, throwOnChange, false);
        var currVal_5_0_17 = this.context.rowCount;
        this._DataTableBodyComponent_5_3.check_rowCount(currVal_5_0_17, throwOnChange, false);
        var currVal_5_0_18 = this.context.innerWidth;
        this._DataTableBodyComponent_5_3.check_innerWidth(currVal_5_0_18, throwOnChange, false);
        var currVal_5_0_19 = this.context.bodyHeight;
        this._DataTableBodyComponent_5_3.check_bodyHeight(currVal_5_0_19, throwOnChange, false);
        this._DataTableBodyComponent_5_3.ngDoCheck(this, this._el_5, throwOnChange);
        var currVal_8_0_0 = this.context.footerHeight;
        this._NgIf_8_6.check_ngIf(currVal_8_0_0, throwOnChange, false);
        this._NgIf_8_6.ngDoCheck(this, this._anchor_8, throwOnChange);
        this._vc_3.detectChangesInNestedViews(throwOnChange);
        this._vc_8.detectChangesInNestedViews(throwOnChange);
        this._VisibilityDirective_1_3.checkHost(this, this, this._el_1, throwOnChange);
        this._DataTableBodyComponent_5_3.checkHost(this, this.compView_5, this._el_5, throwOnChange);
        this.compView_5.internalDetectChanges(throwOnChange);
    };
    View_DatatableComponent0.prototype.destroyInternal = function () {
        this._vc_3.destroyNestedViews();
        this._vc_8.destroyNestedViews();
        this.compView_5.destroy();
        this._DataTableBodyComponent_5_3.ngOnDestroy();
        this._VisibilityDirective_1_3.ngOnDestroy();
    };
    View_DatatableComponent0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 3)) {
            return new View_DatatableComponent1(this.viewUtils, this, 3, this._anchor_3, this._vc_3);
        }
        if ((nodeIndex == 8)) {
            return new View_DatatableComponent2(this.viewUtils, this, 8, this._anchor_8, this._vc_8);
        }
        return null;
    };
    View_DatatableComponent0.prototype.handleEvent_1 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'visible')) {
            var pd_sub_0 = (this.context.recalculate() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_DatatableComponent0.prototype.handleEvent_5 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'page')) {
            var pd_sub_0 = (this.context.onBodyPage($event) !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'activate')) {
            var pd_sub_1 = (this.context.activate.emit($event) !== false);
            result = (pd_sub_1 && result);
        }
        if ((eventName == 'rowContextmenu')) {
            var pd_sub_2 = (this.context.rowContextmenu.emit($event) !== false);
            result = (pd_sub_2 && result);
        }
        if ((eventName == 'select')) {
            var pd_sub_3 = (this.context.onBodySelect($event) !== false);
            result = (pd_sub_3 && result);
        }
        if ((eventName == 'detailToggle')) {
            var pd_sub_4 = (this.context.detailToggle.emit($event) !== false);
            result = (pd_sub_4 && result);
        }
        if ((eventName == 'scroll')) {
            var pd_sub_5 = (this.context.onBodyScroll($event) !== false);
            result = (pd_sub_5 && result);
        }
        return result;
    };
    return View_DatatableComponent0;
}(import2.AppView));
//# sourceMappingURL=datatable.component.ngfactory.js.map