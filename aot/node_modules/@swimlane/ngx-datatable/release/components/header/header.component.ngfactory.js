/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '@swimlane/ngx-datatable/release/components/header/header.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/security';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/constants';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@swimlane/ngx-datatable/release/components/header/header-cell.component';
import * as import11 from '../../directives/draggable.directive.ngfactory';
import * as import12 from '../../directives/resizeable.directive.ngfactory';
import * as import13 from '../../directives/long-press.directive.ngfactory';
import * as import14 from './header-cell.component.ngfactory';
import * as import15 from '@angular/core/src/linker/view_container';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from '@swimlane/ngx-datatable/release/directives/draggable.directive';
import * as import18 from '@swimlane/ngx-datatable/release/directives/resizeable.directive';
import * as import19 from '@swimlane/ngx-datatable/release/directives/long-press.directive';
import * as import20 from '../../../../../@angular/common/src/directives/ng_style.ngfactory';
import * as import21 from '../../../../../@angular/common/src/directives/ng_for.ngfactory';
import * as import22 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import23 from '@angular/core/src/linker/template_ref';
import * as import24 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import25 from '@angular/common/src/directives/ng_for';
import * as import26 from '@angular/common/src/directives/ng_style';
import * as import27 from '../../directives/orderable.directive.ngfactory';
import * as import28 from '@angular/core/src/linker/query_list';
import * as import29 from '@swimlane/ngx-datatable/release/directives/orderable.directive';
export var Wrapper_DataTableHeaderComponent = (function () {
    function Wrapper_DataTableHeaderComponent() {
        this._changed = false;
        this.context = new import0.DataTableHeaderComponent();
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
        this._expr_5 = import1.UNINITIALIZED;
        this._expr_6 = import1.UNINITIALIZED;
        this._expr_7 = import1.UNINITIALIZED;
        this._expr_8 = import1.UNINITIALIZED;
        this._expr_9 = import1.UNINITIALIZED;
        this._expr_10 = import1.UNINITIALIZED;
        this._expr_11 = import1.UNINITIALIZED;
        this._expr_12 = import1.UNINITIALIZED;
        this._expr_13 = import1.UNINITIALIZED;
    }
    Wrapper_DataTableHeaderComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_DataTableHeaderComponent.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
        (this.subscription1 && this.subscription1.unsubscribe());
        (this.subscription2 && this.subscription2.unsubscribe());
        (this.subscription3 && this.subscription3.unsubscribe());
    };
    Wrapper_DataTableHeaderComponent.prototype.check_sortAscendingIcon = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.sortAscendingIcon = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_DataTableHeaderComponent.prototype.check_sortDescendingIcon = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.sortDescendingIcon = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_DataTableHeaderComponent.prototype.check_scrollbarH = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.scrollbarH = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_DataTableHeaderComponent.prototype.check_innerWidth = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.innerWidth = currValue;
            this._expr_3 = currValue;
        }
    };
    Wrapper_DataTableHeaderComponent.prototype.check_offsetX = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_4, currValue))) {
            this._changed = true;
            this.context.offsetX = currValue;
            this._expr_4 = currValue;
        }
    };
    Wrapper_DataTableHeaderComponent.prototype.check_sorts = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_5, currValue))) {
            this._changed = true;
            this.context.sorts = currValue;
            this._expr_5 = currValue;
        }
    };
    Wrapper_DataTableHeaderComponent.prototype.check_sortType = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_6, currValue))) {
            this._changed = true;
            this.context.sortType = currValue;
            this._expr_6 = currValue;
        }
    };
    Wrapper_DataTableHeaderComponent.prototype.check_allRowsSelected = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_7, currValue))) {
            this._changed = true;
            this.context.allRowsSelected = currValue;
            this._expr_7 = currValue;
        }
    };
    Wrapper_DataTableHeaderComponent.prototype.check_selectionType = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_8, currValue))) {
            this._changed = true;
            this.context.selectionType = currValue;
            this._expr_8 = currValue;
        }
    };
    Wrapper_DataTableHeaderComponent.prototype.check_reorderable = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_9, currValue))) {
            this._changed = true;
            this.context.reorderable = currValue;
            this._expr_9 = currValue;
        }
    };
    Wrapper_DataTableHeaderComponent.prototype.check_headerHeight = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_10, currValue))) {
            this._changed = true;
            this.context.headerHeight = currValue;
            this._expr_10 = currValue;
        }
    };
    Wrapper_DataTableHeaderComponent.prototype.check_columns = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_11, currValue))) {
            this._changed = true;
            this.context.columns = currValue;
            this._expr_11 = currValue;
        }
    };
    Wrapper_DataTableHeaderComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_DataTableHeaderComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_12 = this.context.headerHeight;
        if (import3.checkBinding(throwOnChange, this._expr_12, currVal_12)) {
            view.renderer.setElementStyle(el, 'height', ((view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_12) == null) ? null : view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_12).toString()));
            this._expr_12 = currVal_12;
        }
        var currVal_13 = this.context.headerWidth;
        if (import3.checkBinding(throwOnChange, this._expr_13, currVal_13)) {
            view.renderer.setElementStyle(el, 'width', ((view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_13) == null) ? null : view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_13).toString()));
            this._expr_13 = currVal_13;
        }
    };
    Wrapper_DataTableHeaderComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_DataTableHeaderComponent.prototype.subscribe = function (view, _eventHandler, emit0, emit1, emit2, emit3) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.sort.subscribe(_eventHandler.bind(view, 'sort')));
        }
        if (emit1) {
            (this.subscription1 = this.context.reorder.subscribe(_eventHandler.bind(view, 'reorder')));
        }
        if (emit2) {
            (this.subscription2 = this.context.resize.subscribe(_eventHandler.bind(view, 'resize')));
        }
        if (emit3) {
            (this.subscription3 = this.context.select.subscribe(_eventHandler.bind(view, 'select')));
        }
    };
    return Wrapper_DataTableHeaderComponent;
}());
var renderType_DataTableHeaderComponent_Host = import3.createRenderComponentType('', 0, import6.ViewEncapsulation.None, [], {});
var View_DataTableHeaderComponent_Host0 = (function (_super) {
    __extends(View_DataTableHeaderComponent_Host0, _super);
    function View_DataTableHeaderComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_DataTableHeaderComponent_Host0, renderType_DataTableHeaderComponent_Host, import7.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways);
    }
    View_DataTableHeaderComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'datatable-header', new import3.InlineArray2(2, 'class', 'datatable-header'), rootSelector, null);
        this.compView_0 = new View_DataTableHeaderComponent0(this.viewUtils, this, 0, this._el_0);
        this._DataTableHeaderComponent_0_3 = new Wrapper_DataTableHeaderComponent();
        this.compView_0.create(this._DataTableHeaderComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import9.ComponentRef_(0, this, this._el_0, this._DataTableHeaderComponent_0_3.context);
    };
    View_DataTableHeaderComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.DataTableHeaderComponent) && (0 === requestNodeIndex))) {
            return this._DataTableHeaderComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_DataTableHeaderComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._DataTableHeaderComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._DataTableHeaderComponent_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_DataTableHeaderComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._DataTableHeaderComponent_0_3.ngOnDestroy();
    };
    View_DataTableHeaderComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_DataTableHeaderComponent_Host0;
}(import2.AppView));
export var DataTableHeaderComponentNgFactory = new import9.ComponentFactory('datatable-header', View_DataTableHeaderComponent_Host0, import0.DataTableHeaderComponent);
var styles_DataTableHeaderComponent = [];
var View_DataTableHeaderComponent2 = (function (_super) {
    __extends(View_DataTableHeaderComponent2, _super);
    function View_DataTableHeaderComponent2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_DataTableHeaderComponent2, renderType_DataTableHeaderComponent, import7.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_DataTableHeaderComponent2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'datatable-header-cell', new import3.InlineArray8(6, 'draggable', '', 'long-press', '', 'resizeable', ''), null);
        this.compView_0 = new import14.View_DataTableHeaderCellComponent0(this.viewUtils, this, 0, this._el_0);
        this._DraggableDirective_0_3 = new import11.Wrapper_DraggableDirective(new import16.ElementRef(this._el_0));
        this._ResizeableDirective_0_4 = new import12.Wrapper_ResizeableDirective(new import16.ElementRef(this._el_0));
        this._LongPressDirective_0_5 = new import13.Wrapper_LongPressDirective();
        this._DataTableHeaderCellComponent_0_6 = new import14.Wrapper_DataTableHeaderCellComponent();
        this._text_1 = this.renderer.createText(null, '\n        ', null);
        this.compView_0.create(this._DataTableHeaderCellComponent_0_6.context);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArrayDynamic(18, 'resize', null, 'longPress', null, 'longPressEnd', null, 'sort', null, 'select', null, 'mouseup', 'document', 'mousedown', null, 'mousemove', null, 'mouseup', null), this.eventHandler(this.handleEvent_0));
        this._ResizeableDirective_0_4.subscribe(this, this.eventHandler(this.handleEvent_0), true);
        this._LongPressDirective_0_5.subscribe(this, this.eventHandler(this.handleEvent_0), true, false, true);
        this._DataTableHeaderCellComponent_0_6.subscribe(this, this.eventHandler(this.handleEvent_0), true, true);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), [disposable_0]);
        return null;
    };
    View_DataTableHeaderComponent2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import17.DraggableDirective) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._DraggableDirective_0_3.context;
        }
        if (((token === import18.ResizeableDirective) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._ResizeableDirective_0_4.context;
        }
        if (((token === import19.LongPressDirective) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._LongPressDirective_0_5.context;
        }
        if (((token === import10.DataTableHeaderCellComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._DataTableHeaderCellComponent_0_6.context;
        }
        return notFoundResult;
    };
    View_DataTableHeaderComponent2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.context.$implicit;
        this._DraggableDirective_0_3.check_dragModel(currVal_0_0_0, throwOnChange, false);
        var currVal_0_0_1 = ((this.parentView.parentView.context.reorderable && this.context.$implicit.draggable) && this.parentView.parentView.context.drag);
        this._DraggableDirective_0_3.check_dragX(currVal_0_0_1, throwOnChange, false);
        var currVal_0_0_2 = false;
        this._DraggableDirective_0_3.check_dragY(currVal_0_0_2, throwOnChange, false);
        this._DraggableDirective_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_0_1_0 = this.context.$implicit.resizeable;
        this._ResizeableDirective_0_4.check_resizeEnabled(currVal_0_1_0, throwOnChange, false);
        this._ResizeableDirective_0_4.ngDoCheck(this, this._el_0, throwOnChange);
        this._LongPressDirective_0_5.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_0_3_0 = this.parentView.parentView.context.sortType;
        this._DataTableHeaderCellComponent_0_6.check_sortType(currVal_0_3_0, throwOnChange, false);
        var currVal_0_3_1 = this.context.$implicit;
        this._DataTableHeaderCellComponent_0_6.check_column(currVal_0_3_1, throwOnChange, false);
        var currVal_0_3_2 = this.parentView.parentView.context.sortAscendingIcon;
        this._DataTableHeaderCellComponent_0_6.check_sortAscendingIcon(currVal_0_3_2, throwOnChange, false);
        var currVal_0_3_3 = this.parentView.parentView.context.sortDescendingIcon;
        this._DataTableHeaderCellComponent_0_6.check_sortDescendingIcon(currVal_0_3_3, throwOnChange, false);
        var currVal_0_3_4 = this.parentView.parentView.context.selectionType;
        this._DataTableHeaderCellComponent_0_6.check_selectionType(currVal_0_3_4, throwOnChange, false);
        var currVal_0_3_5 = this.parentView.parentView.context.headerHeight;
        this._DataTableHeaderCellComponent_0_6.check_headerHeight(currVal_0_3_5, throwOnChange, false);
        var currVal_0_3_6 = this.parentView.parentView.context.sorts;
        this._DataTableHeaderCellComponent_0_6.check_sorts(currVal_0_3_6, throwOnChange, false);
        this._DataTableHeaderCellComponent_0_6.ngDoCheck(this, this._el_0, throwOnChange);
        this._ResizeableDirective_0_4.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this._LongPressDirective_0_5.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this._DataTableHeaderCellComponent_0_6.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_DataTableHeaderComponent2.prototype.dirtyParentQueriesInternal = function () {
        this.parentView.parentView._query_DraggableDirective_1_0.setDirty();
    };
    View_DataTableHeaderComponent2.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._DraggableDirective_0_3.ngOnDestroy();
        this._ResizeableDirective_0_4.ngOnDestroy();
        this._LongPressDirective_0_5.ngOnDestroy();
        this._DataTableHeaderCellComponent_0_6.ngOnDestroy();
    };
    View_DataTableHeaderComponent2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_DataTableHeaderComponent2.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DraggableDirective_0_3.handleEvent(eventName, $event) && result);
        result = (this._ResizeableDirective_0_4.handleEvent(eventName, $event) && result);
        result = (this._LongPressDirective_0_5.handleEvent(eventName, $event) && result);
        if ((eventName == 'resize')) {
            var pd_sub_0 = (this.parentView.parentView.context.onColumnResized($event, this.context.$implicit) !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'longPress')) {
            var pd_sub_1 = ((this.parentView.parentView.context.drag = true) !== false);
            result = (pd_sub_1 && result);
        }
        if ((eventName == 'longPressEnd')) {
            var pd_sub_2 = ((this.parentView.parentView.context.drag = false) !== false);
            result = (pd_sub_2 && result);
        }
        if ((eventName == 'sort')) {
            var pd_sub_3 = (this.parentView.parentView.context.onSort($event) !== false);
            result = (pd_sub_3 && result);
        }
        if ((eventName == 'select')) {
            var pd_sub_4 = (this.parentView.parentView.context.select.emit($event) !== false);
            result = (pd_sub_4 && result);
        }
        return result;
    };
    return View_DataTableHeaderComponent2;
}(import2.AppView));
var View_DataTableHeaderComponent1 = (function (_super) {
    __extends(View_DataTableHeaderComponent1, _super);
    function View_DataTableHeaderComponent1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_DataTableHeaderComponent1, renderType_DataTableHeaderComponent, import7.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_8 = import1.UNINITIALIZED;
    }
    View_DataTableHeaderComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._NgStyle_0_3 = new import20.Wrapper_NgStyle(this.parentView.parentView.injectorGet(import22.KeyValueDiffers, this.parentView.parentIndex), new import16.ElementRef(this._el_0), this.renderer);
        this._text_1 = this.renderer.createText(this._el_0, '\n        ', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_2 = new import15.ViewContainer(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import23.TemplateRef_(this, 2, this._anchor_2);
        this._NgFor_2_6 = new import21.Wrapper_NgFor(this._vc_2.vcRef, this._TemplateRef_2_5, this.parentView.parentView.injectorGet(import24.IterableDiffers, this.parentView.parentIndex), this.parentView.ref);
        this._text_3 = this.renderer.createText(this._el_0, '\n      ', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._anchor_2,
            this._text_3
        ]), null);
        return null;
    };
    View_DataTableHeaderComponent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import23.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import25.NgFor) && (2 === requestNodeIndex))) {
            return this._NgFor_2_6.context;
        }
        if (((token === import26.NgStyle) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) {
            return this._NgStyle_0_3.context;
        }
        return notFoundResult;
    };
    View_DataTableHeaderComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.parentView.context.stylesByGroup(this.context.$implicit.type);
        this._NgStyle_0_3.check_ngStyle(currVal_0_0_0, throwOnChange, false);
        this._NgStyle_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_2_0_0 = this.context.$implicit.columns;
        this._NgFor_2_6.check_ngForOf(currVal_2_0_0, throwOnChange, false);
        var currVal_2_0_1 = this.parentView.context.columnTrackingFn;
        this._NgFor_2_6.check_ngForTrackBy(currVal_2_0_1, throwOnChange, false);
        this._NgFor_2_6.ngDoCheck(this, this._anchor_2, throwOnChange);
        this._vc_2.detectChangesInNestedViews(throwOnChange);
        var currVal_8 = ('datatable-row-' + this.context.$implicit.type);
        if (import3.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this.renderer.setElementProperty(this._el_0, 'className', currVal_8);
            this._expr_8 = currVal_8;
        }
    };
    View_DataTableHeaderComponent1.prototype.destroyInternal = function () {
        this._vc_2.destroyNestedViews();
    };
    View_DataTableHeaderComponent1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_DataTableHeaderComponent1.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 2)) {
            return new View_DataTableHeaderComponent2(this.viewUtils, this, 2, this._anchor_2, this._vc_2);
        }
        return null;
    };
    return View_DataTableHeaderComponent1;
}(import2.AppView));
var renderType_DataTableHeaderComponent = import3.createRenderComponentType('', 0, import6.ViewEncapsulation.None, styles_DataTableHeaderComponent, {});
export var View_DataTableHeaderComponent0 = (function (_super) {
    __extends(View_DataTableHeaderComponent0, _super);
    function View_DataTableHeaderComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_DataTableHeaderComponent0, renderType_DataTableHeaderComponent, import7.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import8.ChangeDetectorStatus.CheckAlways);
        this._expr_11 = import1.UNINITIALIZED;
    }
    View_DataTableHeaderComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray4(4, 'class', 'datatable-header-inner', 'orderable', ''), null);
        this._OrderableDirective_1_3 = new import27.Wrapper_OrderableDirective(this.parentView.injectorGet(import22.KeyValueDiffers, this.parentIndex));
        this._query_DraggableDirective_1_0 = new import28.QueryList();
        this._text_2 = this.renderer.createText(this._el_1, '\n      ', null);
        this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1, null);
        this._vc_3 = new import15.ViewContainer(3, 1, this, this._anchor_3);
        this._TemplateRef_3_5 = new import23.TemplateRef_(this, 3, this._anchor_3);
        this._NgFor_3_6 = new import21.Wrapper_NgFor(this._vc_3.vcRef, this._TemplateRef_3_5, this.parentView.injectorGet(import24.IterableDiffers, this.parentIndex), this.ref);
        this._text_4 = this.renderer.createText(this._el_1, '\n    ', null);
        this._text_5 = this.renderer.createText(parentRenderNode, '\n  ', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_1, new import3.InlineArray2(2, 'reorder', null), this.eventHandler(this.handleEvent_1));
        this._OrderableDirective_1_3.subscribe(this, this.eventHandler(this.handleEvent_1), true);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._anchor_3,
            this._text_4,
            this._text_5
        ]), [disposable_0]);
        return null;
    };
    View_DataTableHeaderComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import23.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import25.NgFor) && (3 === requestNodeIndex))) {
            return this._NgFor_3_6.context;
        }
        if (((token === import29.OrderableDirective) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) {
            return this._OrderableDirective_1_3.context;
        }
        return notFoundResult;
    };
    View_DataTableHeaderComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        this._OrderableDirective_1_3.ngDoCheck(this, this._el_1, throwOnChange);
        var currVal_3_0_0 = this.context.columnsByPin;
        this._NgFor_3_6.check_ngForOf(currVal_3_0_0, throwOnChange, false);
        var currVal_3_0_1 = this.context.trackByGroups;
        this._NgFor_3_6.check_ngForTrackBy(currVal_3_0_1, throwOnChange, false);
        this._NgFor_3_6.ngDoCheck(this, this._anchor_3, throwOnChange);
        this._vc_3.detectChangesInNestedViews(throwOnChange);
        if (!throwOnChange) {
            if (this._query_DraggableDirective_1_0.dirty) {
                this._query_DraggableDirective_1_0.reset([this._vc_3.mapNestedViews(View_DataTableHeaderComponent1, function (nestedView) {
                        return [nestedView._vc_2.mapNestedViews(View_DataTableHeaderComponent2, function (nestedView) {
                                return [nestedView._DraggableDirective_0_3.context];
                            })];
                    })]);
                this._OrderableDirective_1_3.context.draggables = this._query_DraggableDirective_1_0;
                this._query_DraggableDirective_1_0.notifyOnChanges();
            }
            if ((this.numberOfChecks === 0)) {
                this._OrderableDirective_1_3.context.ngAfterContentInit();
            }
        }
        var currVal_11 = this.context.columnGroupWidths.total;
        if (import3.checkBinding(throwOnChange, this._expr_11, currVal_11)) {
            this.renderer.setElementStyle(this._el_1, 'width', ((this.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_11) == null) ? null : (this.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_11).toString() + 'px')));
            this._expr_11 = currVal_11;
        }
    };
    View_DataTableHeaderComponent0.prototype.destroyInternal = function () {
        this._vc_3.destroyNestedViews();
        this._OrderableDirective_1_3.ngOnDestroy();
    };
    View_DataTableHeaderComponent0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 3)) {
            return new View_DataTableHeaderComponent1(this.viewUtils, this, 3, this._anchor_3, this._vc_3);
        }
        return null;
    };
    View_DataTableHeaderComponent0.prototype.handleEvent_1 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'reorder')) {
            var pd_sub_0 = (this.context.onColumnReordered($event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_DataTableHeaderComponent0;
}(import2.AppView));
//# sourceMappingURL=header.component.ngfactory.js.map