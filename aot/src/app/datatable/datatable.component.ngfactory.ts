/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../src/app/datatable/datatable.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../../../src/app/service/userdata.service';
import * as import9 from '@angular/router/src/router';
import * as import10 from './datatable.component.css.shim.ngstyle';
import * as import11 from '@swimlane/ngx-datatable/release/components/datatable.component';
import * as import12 from '../../../node_modules/@swimlane/ngx-datatable/release/components/datatable.component.ngfactory';
import * as import13 from '@angular/core/src/linker/query_list';
import * as import14 from '../../../node_modules/@swimlane/ngx-datatable/release/components/columns/column.directive.ngfactory';
import * as import15 from '@angular/core/src/linker/element_ref';
import * as import16 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import17 from '@swimlane/ngx-datatable/release/components/columns/column.directive';
export class Wrapper_DatatableComponent {
  /*private*/ _eventHandler:Function;
  context:import0.DatatableComponent;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.DatatableComponent(p0,p1);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_DatatableComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_DatatableComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.DatatableComponent>;
  _DatatableComponent_0_3:Wrapper_DatatableComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DatatableComponent_Host0,renderType_DatatableComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'app-datatable',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_DatatableComponent0(this.viewUtils,this,0,this._el_0);
    this._DatatableComponent_0_3 = new Wrapper_DatatableComponent(this.injectorGet(import8.UserdataService,this.parentIndex),this.injectorGet(import9.Router,this.parentIndex));
    this.compView_0.create(this._DatatableComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._DatatableComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.DatatableComponent) && (0 === requestNodeIndex))) { return this._DatatableComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DatatableComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const DatatableComponentNgFactory:import7.ComponentFactory<import0.DatatableComponent> = new import7.ComponentFactory<import0.DatatableComponent>('app-datatable',View_DatatableComponent_Host0,import0.DatatableComponent);
const styles_DatatableComponent:any[] = [import10.styles];
var renderType_DatatableComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.Emulated,styles_DatatableComponent,{});
export class View_DatatableComponent0 extends import1.AppView<import0.DatatableComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  compView_2:import1.AppView<import11.DatatableComponent>;
  _DatatableComponent_2_3:import12.Wrapper_DatatableComponent;
  _query_DataTableColumnDirective_2_0:import13.QueryList<any>;
  _query_DatatableRowDetailDirective_2_1:import13.QueryList<any>;
  _text_3:any;
  _el_4:any;
  _DataTableColumnDirective_4_3:import14.Wrapper_DataTableColumnDirective;
  _query_DataTableColumnCellDirective_4_0:import13.QueryList<any>;
  _query_DataTableColumnHeaderDirective_4_1:import13.QueryList<any>;
  _text_5:any;
  _el_6:any;
  _DataTableColumnDirective_6_3:import14.Wrapper_DataTableColumnDirective;
  _query_DataTableColumnCellDirective_6_0:import13.QueryList<any>;
  _query_DataTableColumnHeaderDirective_6_1:import13.QueryList<any>;
  _text_7:any;
  _el_8:any;
  _DataTableColumnDirective_8_3:import14.Wrapper_DataTableColumnDirective;
  _query_DataTableColumnCellDirective_8_0:import13.QueryList<any>;
  _query_DataTableColumnHeaderDirective_8_1:import13.QueryList<any>;
  _text_9:any;
  _el_10:any;
  _DataTableColumnDirective_10_3:import14.Wrapper_DataTableColumnDirective;
  _query_DataTableColumnCellDirective_10_0:import13.QueryList<any>;
  _query_DataTableColumnHeaderDirective_10_1:import13.QueryList<any>;
  _text_11:any;
  _el_12:any;
  _DataTableColumnDirective_12_3:import14.Wrapper_DataTableColumnDirective;
  _query_DataTableColumnCellDirective_12_0:import13.QueryList<any>;
  _query_DataTableColumnHeaderDirective_12_1:import13.QueryList<any>;
  _text_13:any;
  _text_14:any;
  _text_15:any;
  _text_16:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DatatableComponent0,renderType_DatatableComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'ngx-datatable',new import3.InlineArray2(2,'class','material datatable'),(null as any));
    this.compView_2 = new import12.View_DatatableComponent0(this.viewUtils,this,2,this._el_2);
    this._DatatableComponent_2_3 = new import12.Wrapper_DatatableComponent(new import15.ElementRef(this._el_2),this.parentView.injectorGet(import16.KeyValueDiffers,this.parentIndex));
    this._query_DataTableColumnDirective_2_0 = new import13.QueryList<any>();
    this._query_DatatableRowDetailDirective_2_1 = new import13.QueryList<any>();
    this._text_3 = this.renderer.createText((null as any),'\n    ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,(null as any),'ngx-datatable-column',new import3.InlineArray4(4,'name','ID','prop','id'),(null as any));
    this._DataTableColumnDirective_4_3 = new import14.Wrapper_DataTableColumnDirective();
    this._query_DataTableColumnCellDirective_4_0 = new import13.QueryList<any>();
    this._query_DataTableColumnHeaderDirective_4_1 = new import13.QueryList<any>();
    this._text_5 = this.renderer.createText((null as any),'\n    ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,(null as any),'ngx-datatable-column',new import3.InlineArray4(4,'name','Name','prop','name'),(null as any));
    this._DataTableColumnDirective_6_3 = new import14.Wrapper_DataTableColumnDirective();
    this._query_DataTableColumnCellDirective_6_0 = new import13.QueryList<any>();
    this._query_DataTableColumnHeaderDirective_6_1 = new import13.QueryList<any>();
    this._text_7 = this.renderer.createText((null as any),'\n    ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,(null as any),'ngx-datatable-column',new import3.InlineArray4(4,'name','Gender','prop','gender'),(null as any));
    this._DataTableColumnDirective_8_3 = new import14.Wrapper_DataTableColumnDirective();
    this._query_DataTableColumnCellDirective_8_0 = new import13.QueryList<any>();
    this._query_DataTableColumnHeaderDirective_8_1 = new import13.QueryList<any>();
    this._text_9 = this.renderer.createText((null as any),'\n    ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,(null as any),'ngx-datatable-column',new import3.InlineArray4(4,'name','Age','prop','age'),(null as any));
    this._DataTableColumnDirective_10_3 = new import14.Wrapper_DataTableColumnDirective();
    this._query_DataTableColumnCellDirective_10_0 = new import13.QueryList<any>();
    this._query_DataTableColumnHeaderDirective_10_1 = new import13.QueryList<any>();
    this._text_11 = this.renderer.createText((null as any),'\n    ',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,(null as any),'ngx-datatable-column',new import3.InlineArray4(4,'name','Addr','prop','address.city'),(null as any));
    this._DataTableColumnDirective_12_3 = new import14.Wrapper_DataTableColumnDirective();
    this._query_DataTableColumnCellDirective_12_0 = new import13.QueryList<any>();
    this._query_DataTableColumnHeaderDirective_12_1 = new import13.QueryList<any>();
    this._text_13 = this.renderer.createText(this._el_12,'\n    ',(null as any));
    this._text_14 = this.renderer.createText((null as any),'\n  ',(null as any));
    this.compView_2.create(this._DatatableComponent_2_3.context);
    this._text_15 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_16 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray4(4,'select',(null as any),'resize','window'),this.eventHandler(this.handleEvent_2));
    this._DatatableComponent_2_3.subscribe(this,this.eventHandler(this.handleEvent_2),false,false,true,false,false,false,false,false,false);
    this._query_DatatableRowDetailDirective_2_1.reset(([] as any[]));
    this._DatatableComponent_2_3.context.rowDetailTemplateChild = this._query_DatatableRowDetailDirective_2_1.first;
    this._query_DataTableColumnCellDirective_4_0.reset(([] as any[]));
    this._DataTableColumnDirective_4_3.context.cellTemplate = this._query_DataTableColumnCellDirective_4_0.first;
    this._query_DataTableColumnHeaderDirective_4_1.reset(([] as any[]));
    this._DataTableColumnDirective_4_3.context.headerTemplate = this._query_DataTableColumnHeaderDirective_4_1.first;
    this._query_DataTableColumnCellDirective_6_0.reset(([] as any[]));
    this._DataTableColumnDirective_6_3.context.cellTemplate = this._query_DataTableColumnCellDirective_6_0.first;
    this._query_DataTableColumnHeaderDirective_6_1.reset(([] as any[]));
    this._DataTableColumnDirective_6_3.context.headerTemplate = this._query_DataTableColumnHeaderDirective_6_1.first;
    this._query_DataTableColumnCellDirective_8_0.reset(([] as any[]));
    this._DataTableColumnDirective_8_3.context.cellTemplate = this._query_DataTableColumnCellDirective_8_0.first;
    this._query_DataTableColumnHeaderDirective_8_1.reset(([] as any[]));
    this._DataTableColumnDirective_8_3.context.headerTemplate = this._query_DataTableColumnHeaderDirective_8_1.first;
    this._query_DataTableColumnCellDirective_10_0.reset(([] as any[]));
    this._DataTableColumnDirective_10_3.context.cellTemplate = this._query_DataTableColumnCellDirective_10_0.first;
    this._query_DataTableColumnHeaderDirective_10_1.reset(([] as any[]));
    this._DataTableColumnDirective_10_3.context.headerTemplate = this._query_DataTableColumnHeaderDirective_10_1.first;
    this._query_DataTableColumnCellDirective_12_0.reset(([] as any[]));
    this._DataTableColumnDirective_12_3.context.cellTemplate = this._query_DataTableColumnCellDirective_12_0.first;
    this._query_DataTableColumnHeaderDirective_12_1.reset(([] as any[]));
    this._DataTableColumnDirective_12_3.context.headerTemplate = this._query_DataTableColumnHeaderDirective_12_1.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._text_14,
      this._text_15,
      this._text_16
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.DataTableColumnDirective) && (4 === requestNodeIndex))) { return this._DataTableColumnDirective_4_3.context; }
    if (((token === import17.DataTableColumnDirective) && (6 === requestNodeIndex))) { return this._DataTableColumnDirective_6_3.context; }
    if (((token === import17.DataTableColumnDirective) && (8 === requestNodeIndex))) { return this._DataTableColumnDirective_8_3.context; }
    if (((token === import17.DataTableColumnDirective) && (10 === requestNodeIndex))) { return this._DataTableColumnDirective_10_3.context; }
    if (((token === import17.DataTableColumnDirective) && ((12 <= requestNodeIndex) && (requestNodeIndex <= 13)))) { return this._DataTableColumnDirective_12_3.context; }
    if (((token === import11.DatatableComponent) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._DatatableComponent_2_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.context.rows;
    this._DatatableComponent_2_3.check_rows(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this.context.selected;
    this._DatatableComponent_2_3.check_selected(currVal_2_0_1,throwOnChange,false);
    const currVal_2_0_2:any = 30;
    this._DatatableComponent_2_3.check_rowHeight(currVal_2_0_2,throwOnChange,false);
    const currVal_2_0_3:any = 30;
    this._DatatableComponent_2_3.check_headerHeight(currVal_2_0_3,throwOnChange,false);
    const currVal_2_0_4:any = 30;
    this._DatatableComponent_2_3.check_footerHeight(currVal_2_0_4,throwOnChange,false);
    const currVal_2_0_5:any = 20;
    this._DatatableComponent_2_3.check_limit(currVal_2_0_5,throwOnChange,false);
    const currVal_2_0_6:any = 'single';
    this._DatatableComponent_2_3.check_selectionType(currVal_2_0_6,throwOnChange,false);
    this._DatatableComponent_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_4_0_0:any = 'ID';
    this._DataTableColumnDirective_4_3.check_name(currVal_4_0_0,throwOnChange,false);
    const currVal_4_0_1:any = 'id';
    this._DataTableColumnDirective_4_3.check_prop(currVal_4_0_1,throwOnChange,false);
    this._DataTableColumnDirective_4_3.ngDoCheck(this,this._el_4,throwOnChange);
    const currVal_6_0_0:any = 'Name';
    this._DataTableColumnDirective_6_3.check_name(currVal_6_0_0,throwOnChange,false);
    const currVal_6_0_1:any = 'name';
    this._DataTableColumnDirective_6_3.check_prop(currVal_6_0_1,throwOnChange,false);
    this._DataTableColumnDirective_6_3.ngDoCheck(this,this._el_6,throwOnChange);
    const currVal_8_0_0:any = 'Gender';
    this._DataTableColumnDirective_8_3.check_name(currVal_8_0_0,throwOnChange,false);
    const currVal_8_0_1:any = 'gender';
    this._DataTableColumnDirective_8_3.check_prop(currVal_8_0_1,throwOnChange,false);
    this._DataTableColumnDirective_8_3.ngDoCheck(this,this._el_8,throwOnChange);
    const currVal_10_0_0:any = 'Age';
    this._DataTableColumnDirective_10_3.check_name(currVal_10_0_0,throwOnChange,false);
    const currVal_10_0_1:any = 'age';
    this._DataTableColumnDirective_10_3.check_prop(currVal_10_0_1,throwOnChange,false);
    this._DataTableColumnDirective_10_3.ngDoCheck(this,this._el_10,throwOnChange);
    const currVal_12_0_0:any = 'Addr';
    this._DataTableColumnDirective_12_3.check_name(currVal_12_0_0,throwOnChange,false);
    const currVal_12_0_1:any = 'address.city';
    this._DataTableColumnDirective_12_3.check_prop(currVal_12_0_1,throwOnChange,false);
    this._DataTableColumnDirective_12_3.ngDoCheck(this,this._el_12,throwOnChange);
    if (!throwOnChange) { if (this._query_DataTableColumnDirective_2_0.dirty) {
      this._query_DataTableColumnDirective_2_0.reset([
        this._DataTableColumnDirective_4_3.context,
        this._DataTableColumnDirective_6_3.context,
        this._DataTableColumnDirective_8_3.context,
        this._DataTableColumnDirective_10_3.context,
        this._DataTableColumnDirective_12_3.context
      ]
      );
      this._DatatableComponent_2_3.context.columnTemplates = this._query_DataTableColumnDirective_2_0;
      this._query_DataTableColumnDirective_2_0.notifyOnChanges();
    } }
    this._DatatableComponent_2_3.checkHost(this,this.compView_2,this._el_2,throwOnChange);
    this.compView_2.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._DatatableComponent_2_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_2.destroy();
    this._DatatableComponent_2_3.ngOnDestroy();
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.compView_2.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DatatableComponent_2_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'select')) {
      const pd_sub_0:any = ((<any>this.context.onSelect($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}