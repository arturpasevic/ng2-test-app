/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../../src/app/datatable/datatable.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../../../src/app/service/userdata.service';
import * as import9 from '@angular/router/src/router';
import * as import10 from './datatable.component.css.shim.ngstyle';
import * as import11 from '@swimlane/ngx-datatable/release/components/datatable.component';
import * as import12 from '../../../node_modules/@swimlane/ngx-datatable/release/components/datatable.component.ngfactory';
import * as import13 from '@angular/core/src/linker/query_list';
import * as import14 from '../../../node_modules/@swimlane/ngx-datatable/release/components/columns/column.directive.ngfactory';
import * as import15 from '@angular/core/src/linker/element_ref';
import * as import16 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import17 from '@swimlane/ngx-datatable/release/components/columns/column.directive';
export var Wrapper_DatatableComponent = (function () {
    function Wrapper_DatatableComponent(p0, p1) {
        this._changed = false;
        this.context = new import0.DatatableComponent(p0, p1);
    }
    Wrapper_DatatableComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_DatatableComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_DatatableComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_DatatableComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_DatatableComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_DatatableComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_DatatableComponent;
}());
var renderType_DatatableComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_DatatableComponent_Host0 = (function (_super) {
    __extends(View_DatatableComponent_Host0, _super);
    function View_DatatableComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_DatatableComponent_Host0, renderType_DatatableComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    View_DatatableComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'app-datatable', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_DatatableComponent0(this.viewUtils, this, 0, this._el_0);
        this._DatatableComponent_0_3 = new Wrapper_DatatableComponent(this.injectorGet(import8.UserdataService, this.parentIndex), this.injectorGet(import9.Router, this.parentIndex));
        this.compView_0.create(this._DatatableComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._DatatableComponent_0_3.context);
    };
    View_DatatableComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.DatatableComponent) && (0 === requestNodeIndex))) {
            return this._DatatableComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_DatatableComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._DatatableComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_DatatableComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_DatatableComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_DatatableComponent_Host0;
}(import1.AppView));
export var DatatableComponentNgFactory = new import7.ComponentFactory('app-datatable', View_DatatableComponent_Host0, import0.DatatableComponent);
var styles_DatatableComponent = [import10.styles];
var renderType_DatatableComponent = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.Emulated, styles_DatatableComponent, {});
export var View_DatatableComponent0 = (function (_super) {
    __extends(View_DatatableComponent0, _super);
    function View_DatatableComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_DatatableComponent0, renderType_DatatableComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    View_DatatableComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._text_1 = this.renderer.createText(this._el_0, '\n  ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'ngx-datatable', new import3.InlineArray2(2, 'class', 'material datatable'), null);
        this.compView_2 = new import12.View_DatatableComponent0(this.viewUtils, this, 2, this._el_2);
        this._DatatableComponent_2_3 = new import12.Wrapper_DatatableComponent(new import15.ElementRef(this._el_2), this.parentView.injectorGet(import16.KeyValueDiffers, this.parentIndex));
        this._query_DataTableColumnDirective_2_0 = new import13.QueryList();
        this._query_DatatableRowDetailDirective_2_1 = new import13.QueryList();
        this._text_3 = this.renderer.createText(null, '\n    ', null);
        this._el_4 = import3.createRenderElement(this.renderer, null, 'ngx-datatable-column', new import3.InlineArray4(4, 'name', 'ID', 'prop', 'id'), null);
        this._DataTableColumnDirective_4_3 = new import14.Wrapper_DataTableColumnDirective();
        this._query_DataTableColumnCellDirective_4_0 = new import13.QueryList();
        this._query_DataTableColumnHeaderDirective_4_1 = new import13.QueryList();
        this._text_5 = this.renderer.createText(null, '\n    ', null);
        this._el_6 = import3.createRenderElement(this.renderer, null, 'ngx-datatable-column', new import3.InlineArray4(4, 'name', 'Name', 'prop', 'name'), null);
        this._DataTableColumnDirective_6_3 = new import14.Wrapper_DataTableColumnDirective();
        this._query_DataTableColumnCellDirective_6_0 = new import13.QueryList();
        this._query_DataTableColumnHeaderDirective_6_1 = new import13.QueryList();
        this._text_7 = this.renderer.createText(null, '\n    ', null);
        this._el_8 = import3.createRenderElement(this.renderer, null, 'ngx-datatable-column', new import3.InlineArray4(4, 'name', 'Gender', 'prop', 'gender'), null);
        this._DataTableColumnDirective_8_3 = new import14.Wrapper_DataTableColumnDirective();
        this._query_DataTableColumnCellDirective_8_0 = new import13.QueryList();
        this._query_DataTableColumnHeaderDirective_8_1 = new import13.QueryList();
        this._text_9 = this.renderer.createText(null, '\n    ', null);
        this._el_10 = import3.createRenderElement(this.renderer, null, 'ngx-datatable-column', new import3.InlineArray4(4, 'name', 'Age', 'prop', 'age'), null);
        this._DataTableColumnDirective_10_3 = new import14.Wrapper_DataTableColumnDirective();
        this._query_DataTableColumnCellDirective_10_0 = new import13.QueryList();
        this._query_DataTableColumnHeaderDirective_10_1 = new import13.QueryList();
        this._text_11 = this.renderer.createText(null, '\n    ', null);
        this._el_12 = import3.createRenderElement(this.renderer, null, 'ngx-datatable-column', new import3.InlineArray4(4, 'name', 'Addr', 'prop', 'address.city'), null);
        this._DataTableColumnDirective_12_3 = new import14.Wrapper_DataTableColumnDirective();
        this._query_DataTableColumnCellDirective_12_0 = new import13.QueryList();
        this._query_DataTableColumnHeaderDirective_12_1 = new import13.QueryList();
        this._text_13 = this.renderer.createText(this._el_12, '\n    ', null);
        this._text_14 = this.renderer.createText(null, '\n  ', null);
        this.compView_2.create(this._DatatableComponent_2_3.context);
        this._text_15 = this.renderer.createText(this._el_0, '\n', null);
        this._text_16 = this.renderer.createText(parentRenderNode, '\n', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_2, new import3.InlineArray4(4, 'select', null, 'resize', 'window'), this.eventHandler(this.handleEvent_2));
        this._DatatableComponent_2_3.subscribe(this, this.eventHandler(this.handleEvent_2), false, false, true, false, false, false, false, false, false);
        this._query_DatatableRowDetailDirective_2_1.reset([]);
        this._DatatableComponent_2_3.context.rowDetailTemplateChild = this._query_DatatableRowDetailDirective_2_1.first;
        this._query_DataTableColumnCellDirective_4_0.reset([]);
        this._DataTableColumnDirective_4_3.context.cellTemplate = this._query_DataTableColumnCellDirective_4_0.first;
        this._query_DataTableColumnHeaderDirective_4_1.reset([]);
        this._DataTableColumnDirective_4_3.context.headerTemplate = this._query_DataTableColumnHeaderDirective_4_1.first;
        this._query_DataTableColumnCellDirective_6_0.reset([]);
        this._DataTableColumnDirective_6_3.context.cellTemplate = this._query_DataTableColumnCellDirective_6_0.first;
        this._query_DataTableColumnHeaderDirective_6_1.reset([]);
        this._DataTableColumnDirective_6_3.context.headerTemplate = this._query_DataTableColumnHeaderDirective_6_1.first;
        this._query_DataTableColumnCellDirective_8_0.reset([]);
        this._DataTableColumnDirective_8_3.context.cellTemplate = this._query_DataTableColumnCellDirective_8_0.first;
        this._query_DataTableColumnHeaderDirective_8_1.reset([]);
        this._DataTableColumnDirective_8_3.context.headerTemplate = this._query_DataTableColumnHeaderDirective_8_1.first;
        this._query_DataTableColumnCellDirective_10_0.reset([]);
        this._DataTableColumnDirective_10_3.context.cellTemplate = this._query_DataTableColumnCellDirective_10_0.first;
        this._query_DataTableColumnHeaderDirective_10_1.reset([]);
        this._DataTableColumnDirective_10_3.context.headerTemplate = this._query_DataTableColumnHeaderDirective_10_1.first;
        this._query_DataTableColumnCellDirective_12_0.reset([]);
        this._DataTableColumnDirective_12_3.context.cellTemplate = this._query_DataTableColumnCellDirective_12_0.first;
        this._query_DataTableColumnHeaderDirective_12_1.reset([]);
        this._DataTableColumnDirective_12_3.context.headerTemplate = this._query_DataTableColumnHeaderDirective_12_1.first;
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._el_8,
            this._text_9,
            this._el_10,
            this._text_11,
            this._el_12,
            this._text_13,
            this._text_14,
            this._text_15,
            this._text_16
        ]), [disposable_0]);
        return null;
    };
    View_DatatableComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import17.DataTableColumnDirective) && (4 === requestNodeIndex))) {
            return this._DataTableColumnDirective_4_3.context;
        }
        if (((token === import17.DataTableColumnDirective) && (6 === requestNodeIndex))) {
            return this._DataTableColumnDirective_6_3.context;
        }
        if (((token === import17.DataTableColumnDirective) && (8 === requestNodeIndex))) {
            return this._DataTableColumnDirective_8_3.context;
        }
        if (((token === import17.DataTableColumnDirective) && (10 === requestNodeIndex))) {
            return this._DataTableColumnDirective_10_3.context;
        }
        if (((token === import17.DataTableColumnDirective) && ((12 <= requestNodeIndex) && (requestNodeIndex <= 13)))) {
            return this._DataTableColumnDirective_12_3.context;
        }
        if (((token === import11.DatatableComponent) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 14)))) {
            return this._DatatableComponent_2_3.context;
        }
        return notFoundResult;
    };
    View_DatatableComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2_0_0 = this.context.rows;
        this._DatatableComponent_2_3.check_rows(currVal_2_0_0, throwOnChange, false);
        var currVal_2_0_1 = this.context.selected;
        this._DatatableComponent_2_3.check_selected(currVal_2_0_1, throwOnChange, false);
        var currVal_2_0_2 = 30;
        this._DatatableComponent_2_3.check_rowHeight(currVal_2_0_2, throwOnChange, false);
        var currVal_2_0_3 = 30;
        this._DatatableComponent_2_3.check_headerHeight(currVal_2_0_3, throwOnChange, false);
        var currVal_2_0_4 = 30;
        this._DatatableComponent_2_3.check_footerHeight(currVal_2_0_4, throwOnChange, false);
        var currVal_2_0_5 = 20;
        this._DatatableComponent_2_3.check_limit(currVal_2_0_5, throwOnChange, false);
        var currVal_2_0_6 = 'single';
        this._DatatableComponent_2_3.check_selectionType(currVal_2_0_6, throwOnChange, false);
        this._DatatableComponent_2_3.ngDoCheck(this, this._el_2, throwOnChange);
        var currVal_4_0_0 = 'ID';
        this._DataTableColumnDirective_4_3.check_name(currVal_4_0_0, throwOnChange, false);
        var currVal_4_0_1 = 'id';
        this._DataTableColumnDirective_4_3.check_prop(currVal_4_0_1, throwOnChange, false);
        this._DataTableColumnDirective_4_3.ngDoCheck(this, this._el_4, throwOnChange);
        var currVal_6_0_0 = 'Name';
        this._DataTableColumnDirective_6_3.check_name(currVal_6_0_0, throwOnChange, false);
        var currVal_6_0_1 = 'name';
        this._DataTableColumnDirective_6_3.check_prop(currVal_6_0_1, throwOnChange, false);
        this._DataTableColumnDirective_6_3.ngDoCheck(this, this._el_6, throwOnChange);
        var currVal_8_0_0 = 'Gender';
        this._DataTableColumnDirective_8_3.check_name(currVal_8_0_0, throwOnChange, false);
        var currVal_8_0_1 = 'gender';
        this._DataTableColumnDirective_8_3.check_prop(currVal_8_0_1, throwOnChange, false);
        this._DataTableColumnDirective_8_3.ngDoCheck(this, this._el_8, throwOnChange);
        var currVal_10_0_0 = 'Age';
        this._DataTableColumnDirective_10_3.check_name(currVal_10_0_0, throwOnChange, false);
        var currVal_10_0_1 = 'age';
        this._DataTableColumnDirective_10_3.check_prop(currVal_10_0_1, throwOnChange, false);
        this._DataTableColumnDirective_10_3.ngDoCheck(this, this._el_10, throwOnChange);
        var currVal_12_0_0 = 'Addr';
        this._DataTableColumnDirective_12_3.check_name(currVal_12_0_0, throwOnChange, false);
        var currVal_12_0_1 = 'address.city';
        this._DataTableColumnDirective_12_3.check_prop(currVal_12_0_1, throwOnChange, false);
        this._DataTableColumnDirective_12_3.ngDoCheck(this, this._el_12, throwOnChange);
        if (!throwOnChange) {
            if (this._query_DataTableColumnDirective_2_0.dirty) {
                this._query_DataTableColumnDirective_2_0.reset([
                    this._DataTableColumnDirective_4_3.context,
                    this._DataTableColumnDirective_6_3.context,
                    this._DataTableColumnDirective_8_3.context,
                    this._DataTableColumnDirective_10_3.context,
                    this._DataTableColumnDirective_12_3.context
                ]);
                this._DatatableComponent_2_3.context.columnTemplates = this._query_DataTableColumnDirective_2_0;
                this._query_DataTableColumnDirective_2_0.notifyOnChanges();
            }
        }
        this._DatatableComponent_2_3.checkHost(this, this.compView_2, this._el_2, throwOnChange);
        this.compView_2.internalDetectChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._DatatableComponent_2_3.context.ngAfterViewInit();
            }
        }
    };
    View_DatatableComponent0.prototype.destroyInternal = function () {
        this.compView_2.destroy();
        this._DatatableComponent_2_3.ngOnDestroy();
    };
    View_DatatableComponent0.prototype.handleEvent_2 = function (eventName, $event) {
        this.compView_2.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DatatableComponent_2_3.handleEvent(eventName, $event) && result);
        if ((eventName == 'select')) {
            var pd_sub_0 = (this.context.onSelect($event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_DatatableComponent0;
}(import1.AppView));
//# sourceMappingURL=datatable.component.ngfactory.js.map